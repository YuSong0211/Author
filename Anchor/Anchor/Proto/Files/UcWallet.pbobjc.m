// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uc-wallet.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "UcWallet.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(serviceucWalletObtain);

#pragma mark - serviceucUcWalletRoot

@implementation serviceucUcWalletRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - serviceucUcWalletRoot_FileDescriptor

static GPBFileDescriptor *serviceucUcWalletRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"uc"
                                                 objcPrefix:@"serviceuc"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - serviceucWalletAmount

@implementation serviceucWalletAmount

@dynamic amount;
@dynamic hasObtain, obtain;
@dynamic totalWalletAmount;

typedef struct serviceucWalletAmount__storage_ {
  uint32_t _has_storage_[1];
  uint32_t amount;
  uint32_t totalWalletAmount;
  serviceucWalletObtain *obtain;
} serviceucWalletAmount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "amount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucWalletAmount_FieldNumber_Amount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucWalletAmount__storage_, amount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "obtain",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucWalletObtain),
        .number = serviceucWalletAmount_FieldNumber_Obtain,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucWalletAmount__storage_, obtain),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "totalWalletAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucWalletAmount_FieldNumber_TotalWalletAmount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceucWalletAmount__storage_, totalWalletAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucWalletAmount class]
                                     rootClass:[serviceucUcWalletRoot class]
                                          file:serviceucUcWalletRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucWalletAmount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucWalletObtain

@implementation serviceucWalletObtain

@dynamic relatedAmount;
@dynamic scrollAmount;
@dynamic liveAmount;

typedef struct serviceucWalletObtain__storage_ {
  uint32_t _has_storage_[1];
  uint32_t relatedAmount;
  uint32_t scrollAmount;
  uint32_t liveAmount;
} serviceucWalletObtain__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "relatedAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucWalletObtain_FieldNumber_RelatedAmount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucWalletObtain__storage_, relatedAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scrollAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucWalletObtain_FieldNumber_ScrollAmount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucWalletObtain__storage_, scrollAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "liveAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucWalletObtain_FieldNumber_LiveAmount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceucWalletObtain__storage_, liveAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucWalletObtain class]
                                     rootClass:[serviceucUcWalletRoot class]
                                          file:serviceucUcWalletRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucWalletObtain__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucBankInfo

@implementation serviceucBankInfo

@dynamic bankNumber;
@dynamic bankName;
@dynamic bankNickname;
@dynamic bankArea;
@dynamic bankAreaName;
@dynamic reservedTel;

typedef struct serviceucBankInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *bankNumber;
  NSString *bankName;
  NSString *bankNickname;
  NSString *bankArea;
  NSString *bankAreaName;
  NSString *reservedTel;
} serviceucBankInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bankNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_BankNumber,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, bankNumber),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankName",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_BankName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, bankName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankNickname",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_BankNickname,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, bankNickname),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankArea",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_BankArea,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, bankArea),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankAreaName",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_BankAreaName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, bankAreaName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reservedTel",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucBankInfo_FieldNumber_ReservedTel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(serviceucBankInfo__storage_, reservedTel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucBankInfo class]
                                     rootClass:[serviceucUcWalletRoot class]
                                          file:serviceucUcWalletRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucBankInfo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
