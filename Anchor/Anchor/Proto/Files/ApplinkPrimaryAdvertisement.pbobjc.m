// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: applink-primary-advertisement.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "ApplinkPrimaryAdvertisement.pbobjc.h"
#import "ApplinkAdvertisement.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - serviceapplinkApplinkPrimaryAdvertisementRoot

@implementation serviceapplinkApplinkPrimaryAdvertisementRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - serviceapplinkApplinkPrimaryAdvertisementRoot_FileDescriptor

static GPBFileDescriptor *serviceapplinkApplinkPrimaryAdvertisementRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"applink"
                                                 objcPrefix:@"serviceapplink"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - serviceapplinkAdvertisement

@implementation serviceapplinkAdvertisement

@dynamic id_p;
@dynamic title;
@dynamic linkParam;
@dynamic adPlacement;
@dynamic resourceURL;

typedef struct serviceapplinkAdvertisement__storage_ {
  uint32_t _has_storage_[1];
  serviceapplinkAdPlacement adPlacement;
  NSString *title;
  NSString *linkParam;
  NSString *resourceURL;
  uint64_t id_p;
} serviceapplinkAdvertisement__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceapplinkAdvertisement_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceapplinkAdvertisement__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceapplinkAdvertisement_FieldNumber_Title,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceapplinkAdvertisement__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "linkParam",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceapplinkAdvertisement_FieldNumber_LinkParam,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceapplinkAdvertisement__storage_, linkParam),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adPlacement",
        .dataTypeSpecific.enumDescFunc = serviceapplinkAdPlacement_EnumDescriptor,
        .number = serviceapplinkAdvertisement_FieldNumber_AdPlacement,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(serviceapplinkAdvertisement__storage_, adPlacement),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "resourceURL",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceapplinkAdvertisement_FieldNumber_ResourceURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(serviceapplinkAdvertisement__storage_, resourceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceapplinkAdvertisement class]
                                     rootClass:[serviceapplinkApplinkPrimaryAdvertisementRoot class]
                                          file:serviceapplinkApplinkPrimaryAdvertisementRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceapplinkAdvertisement__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\005\010\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t serviceapplinkAdvertisement_AdPlacement_RawValue(serviceapplinkAdvertisement *message) {
  GPBDescriptor *descriptor = [serviceapplinkAdvertisement descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:serviceapplinkAdvertisement_FieldNumber_AdPlacement];
  return GPBGetMessageRawEnumField(message, field);
}

void SetserviceapplinkAdvertisement_AdPlacement_RawValue(serviceapplinkAdvertisement *message, int32_t value) {
  GPBDescriptor *descriptor = [serviceapplinkAdvertisement descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:serviceapplinkAdvertisement_FieldNumber_AdPlacement];
  GPBSetMessageRawEnumField(message, field, value);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
