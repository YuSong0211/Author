// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange-primary-push-notice.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class serviceexchangeAnchorApplyNotice_PushNotice;
@class serviceexchangeAnchorBackLiveNotice_PushNotice;
@class serviceexchangeAnchorLeaveLiveNotice_PushNotice;
@class serviceexchangeChatLiveNotice_PushNotice;
@class serviceexchangeChatUser;
@class serviceexchangeCloseLiveNotice_PushNotice;
@class serviceexchangeEnterLiveNotice_PushNotice;
@class serviceexchangeExitLiveNotice_PushNotice;
@class serviceexchangeLiveGiftNotice_PushNotice;
@class serviceexchangeLiveUserListResponse;
@class serviceexchangeMessageCount;
@class serviceexchangeMessageUserNotice_ChatNotice;
@class serviceexchangeMessageUserNotice_PushNotice;
@class serviceexchangeMessageUserNotice_TemplateNotice;
@class serviceexchangeUserStatusNotice_PushNotice;
@class serviceexchangeVersionId;
@class utilidentitysdkIdEncode;
GPB_ENUM_FWD_DECLARE(serviceexchangeApplyLiveStatus);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - serviceexchangeExchangePrimaryPushNoticeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface serviceexchangeExchangePrimaryPushNoticeRoot : GPBRootObject
@end

#pragma mark - serviceexchangeMessageUserNotice

typedef GPB_ENUM(serviceexchangeMessageUserNotice_FieldNumber) {
  serviceexchangeMessageUserNotice_FieldNumber_Version = 1,
  serviceexchangeMessageUserNotice_FieldNumber_TemplateNotice = 2,
  serviceexchangeMessageUserNotice_FieldNumber_ChatNotice = 3,
  serviceexchangeMessageUserNotice_FieldNumber_PushNotice = 4,
};

/**
 * 用户消息通知
 * 包含：互动消息/工单回复/私聊消息
 * eventName: message-user-notice
 **/
GPB_FINAL @interface serviceexchangeMessageUserNotice : GPBMessage

/** 推送事件的版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 模板消息通知（互动消息） */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageUserNotice_TemplateNotice *templateNotice;
/** Test to see if @c templateNotice has been set. */
@property(nonatomic, readwrite) BOOL hasTemplateNotice;

/** 聊天消息通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageUserNotice_ChatNotice *chatNotice;
/** Test to see if @c chatNotice has been set. */
@property(nonatomic, readwrite) BOOL hasChatNotice;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageUserNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeMessageUserNotice_TemplateNotice

typedef GPB_ENUM(serviceexchangeMessageUserNotice_TemplateNotice_FieldNumber) {
  serviceexchangeMessageUserNotice_TemplateNotice_FieldNumber_MessageCount = 1,
  serviceexchangeMessageUserNotice_TemplateNotice_FieldNumber_VersionId = 2,
};

/**
 * 模板消息通知（互动消息）
 **/
GPB_FINAL @interface serviceexchangeMessageUserNotice_TemplateNotice : GPBMessage

/** 消息计数 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageCount *messageCount;
/** Test to see if @c messageCount has been set. */
@property(nonatomic, readwrite) BOOL hasMessageCount;

/** 消息的版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *versionId;
/** Test to see if @c versionId has been set. */
@property(nonatomic, readwrite) BOOL hasVersionId;

@end

#pragma mark - serviceexchangeMessageUserNotice_ChatNotice

typedef GPB_ENUM(serviceexchangeMessageUserNotice_ChatNotice_FieldNumber) {
  serviceexchangeMessageUserNotice_ChatNotice_FieldNumber_MessageCount = 1,
  serviceexchangeMessageUserNotice_ChatNotice_FieldNumber_GroupId = 2,
  serviceexchangeMessageUserNotice_ChatNotice_FieldNumber_VersionId = 3,
  serviceexchangeMessageUserNotice_ChatNotice_FieldNumber_TalkWithUid = 4,
};

/**
 * 聊天消息通知
 **/
GPB_FINAL @interface serviceexchangeMessageUserNotice_ChatNotice : GPBMessage

/** 消息计数 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageCount *messageCount;
/** Test to see if @c messageCount has been set. */
@property(nonatomic, readwrite) BOOL hasMessageCount;

/** 聊天组（会话）id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 聊天组（会话）版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *versionId;
/** Test to see if @c versionId has been set. */
@property(nonatomic, readwrite) BOOL hasVersionId;

/** 聊天时对方用户的uid */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *talkWithUid;
/** Test to see if @c talkWithUid has been set. */
@property(nonatomic, readwrite) BOOL hasTalkWithUid;

@end

#pragma mark - serviceexchangeMessageUserNotice_PushNotice

typedef GPB_ENUM(serviceexchangeMessageUserNotice_PushNotice_FieldNumber) {
  serviceexchangeMessageUserNotice_PushNotice_FieldNumber_Type = 1,
  serviceexchangeMessageUserNotice_PushNotice_FieldNumber_MessageCount = 2,
  serviceexchangeMessageUserNotice_PushNotice_FieldNumber_Content = 3,
};

/**
 * 推送通知（包括：工单等appv业务）
 **/
GPB_FINAL @interface serviceexchangeMessageUserNotice_PushNotice : GPBMessage

/**
 * 类型
 * WorkOrderReplyNotice：工单新回复通知
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

/** 消息计数 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeMessageCount *messageCount;
/** Test to see if @c messageCount has been set. */
@property(nonatomic, readwrite) BOOL hasMessageCount;

/** 推送的消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - serviceexchangeUserStatusNotice

typedef GPB_ENUM(serviceexchangeUserStatusNotice_FieldNumber) {
  serviceexchangeUserStatusNotice_FieldNumber_Version = 1,
  serviceexchangeUserStatusNotice_FieldNumber_PushNotice = 2,
};

/**
 * 用户状态通知
 * 包含：会员状态变动
 * eventName: user-status-updates
 **/
GPB_FINAL @interface serviceexchangeUserStatusNotice : GPBMessage

/** 推送事件的版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeUserStatusNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeUserStatusNotice_PushNotice

typedef GPB_ENUM(serviceexchangeUserStatusNotice_PushNotice_FieldNumber) {
  serviceexchangeUserStatusNotice_PushNotice_FieldNumber_Type = 1,
  serviceexchangeUserStatusNotice_PushNotice_FieldNumber_Content = 2,
};

/**
 * 推送通知
 **/
GPB_FINAL @interface serviceexchangeUserStatusNotice_PushNotice : GPBMessage

/**
 * 类型
 * vipRecharge：vip购买充值成功通知；walletRecharge：钱包充值成功通知
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

/** 推送的消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - serviceexchangeLiveGiftNotice

typedef GPB_ENUM(serviceexchangeLiveGiftNotice_FieldNumber) {
  serviceexchangeLiveGiftNotice_FieldNumber_Version = 1,
  serviceexchangeLiveGiftNotice_FieldNumber_ErrorMessage = 2,
  serviceexchangeLiveGiftNotice_FieldNumber_PushNotice = 3,
};

/**
 * 直播间礼物通知 pushType:LiveGiftPush
 **/
GPB_FINAL @interface serviceexchangeLiveGiftNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 异常消息 打赏失败该字段返回原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeLiveGiftNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeLiveGiftNotice_PushNotice

typedef GPB_ENUM(serviceexchangeLiveGiftNotice_PushNotice_FieldNumber) {
  serviceexchangeLiveGiftNotice_PushNotice_FieldNumber_GiftId = 1,
  serviceexchangeLiveGiftNotice_PushNotice_FieldNumber_GiftCount = 2,
  serviceexchangeLiveGiftNotice_PushNotice_FieldNumber_ChatUser = 3,
  serviceexchangeLiveGiftNotice_PushNotice_FieldNumber_AudienceLevel = 4,
};

/**
 * 推送通知
 **/
GPB_FINAL @interface serviceexchangeLiveGiftNotice_PushNotice : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *giftId;
/** Test to see if @c giftId has been set. */
@property(nonatomic, readwrite) BOOL hasGiftId;

/** 礼物数量 */
@property(nonatomic, readwrite) uint32_t giftCount;

/** 打赏用户基本信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 打赏用户等级 */
@property(nonatomic, readwrite) uint32_t audienceLevel;

@end

#pragma mark - serviceexchangeEnterLiveNotice

typedef GPB_ENUM(serviceexchangeEnterLiveNotice_FieldNumber) {
  serviceexchangeEnterLiveNotice_FieldNumber_Version = 1,
  serviceexchangeEnterLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 进入直播间通知 pushType:EnterLivingRoomPush
 **/
GPB_FINAL @interface serviceexchangeEnterLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeEnterLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeEnterLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeEnterLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeEnterLiveNotice_PushNotice_FieldNumber_ChatUser = 1,
  serviceexchangeEnterLiveNotice_PushNotice_FieldNumber_AudienceLevel = 2,
  serviceexchangeEnterLiveNotice_PushNotice_FieldNumber_CurrentLiveRewardAmount = 3,
  serviceexchangeEnterLiveNotice_PushNotice_FieldNumber_EnterLiveRoomTime = 4,
  serviceexchangeEnterLiveNotice_PushNotice_FieldNumber_FirstEnter = 5,
};

GPB_FINAL @interface serviceexchangeEnterLiveNotice_PushNotice : GPBMessage

/** 用户基本信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 观众等级 */
@property(nonatomic, readwrite) uint32_t audienceLevel;

/** 当前直播用户打赏金额 */
@property(nonatomic, readwrite) uint32_t currentLiveRewardAmount;

/** 计入直播间时间 */
@property(nonatomic, readwrite) uint64_t enterLiveRoomTime;

/** 是否是首次进入直播间 */
@property(nonatomic, readwrite) BOOL firstEnter;

@end

#pragma mark - serviceexchangeExitLiveNotice

typedef GPB_ENUM(serviceexchangeExitLiveNotice_FieldNumber) {
  serviceexchangeExitLiveNotice_FieldNumber_Version = 1,
  serviceexchangeExitLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 退出直播间通知 pushType:ExitLivingRoomPush
 **/
GPB_FINAL @interface serviceexchangeExitLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeExitLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeExitLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeExitLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeExitLiveNotice_PushNotice_FieldNumber_AudienceUid = 1,
  serviceexchangeExitLiveNotice_PushNotice_FieldNumber_ListResponse = 2,
};

GPB_FINAL @interface serviceexchangeExitLiveNotice_PushNotice : GPBMessage

/** 观众uid */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *audienceUid;
/** Test to see if @c audienceUid has been set. */
@property(nonatomic, readwrite) BOOL hasAudienceUid;

/** 用户列表 可能为空；为空的情况只需将退出的观众移除即可 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeLiveUserListResponse *listResponse;
/** Test to see if @c listResponse has been set. */
@property(nonatomic, readwrite) BOOL hasListResponse;

@end

#pragma mark - serviceexchangeCloseLiveNotice

typedef GPB_ENUM(serviceexchangeCloseLiveNotice_FieldNumber) {
  serviceexchangeCloseLiveNotice_FieldNumber_Version = 1,
  serviceexchangeCloseLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 关闭直播间通知 pushType:CloseLivePush
 **/
GPB_FINAL @interface serviceexchangeCloseLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeCloseLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeCloseLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeCloseLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeCloseLiveNotice_PushNotice_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeCloseLiveNotice_PushNotice : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeChatLiveNotice

typedef GPB_ENUM(serviceexchangeChatLiveNotice_FieldNumber) {
  serviceexchangeChatLiveNotice_FieldNumber_Version = 1,
  serviceexchangeChatLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 互动消息直播间通知 pushType:ChatLivePush
 **/
GPB_FINAL @interface serviceexchangeChatLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeChatLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeChatLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeChatLiveNotice_PushNotice_FieldNumber_ChatUser = 1,
  serviceexchangeChatLiveNotice_PushNotice_FieldNumber_Content = 2,
  serviceexchangeChatLiveNotice_PushNotice_FieldNumber_AudienceLevel = 3,
};

GPB_FINAL @interface serviceexchangeChatLiveNotice_PushNotice : GPBMessage

/** 聊天用户 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 聊天内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 打赏用户等级 */
@property(nonatomic, readwrite) uint32_t audienceLevel;

@end

#pragma mark - serviceexchangeStarLiveNotice

typedef GPB_ENUM(serviceexchangeStarLiveNotice_FieldNumber) {
  serviceexchangeStarLiveNotice_FieldNumber_Version = 1,
};

/**
 * 点赞消息直播间通知 pushType:StarLivePush
 **/
GPB_FINAL @interface serviceexchangeStarLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

@end

#pragma mark - serviceexchangeAnchorApplyNotice

typedef GPB_ENUM(serviceexchangeAnchorApplyNotice_FieldNumber) {
  serviceexchangeAnchorApplyNotice_FieldNumber_Version = 1,
  serviceexchangeAnchorApplyNotice_FieldNumber_PushNotice = 2,
};

/**
 * 主播审核消息通知 pushType:AnchorApplyPush
 **/
GPB_FINAL @interface serviceexchangeAnchorApplyNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeAnchorApplyNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeAnchorApplyNotice_PushNotice

typedef GPB_ENUM(serviceexchangeAnchorApplyNotice_PushNotice_FieldNumber) {
  serviceexchangeAnchorApplyNotice_PushNotice_FieldNumber_ApplyLiveStatus = 1,
  serviceexchangeAnchorApplyNotice_PushNotice_FieldNumber_AuditFailReason = 2,
};

GPB_FINAL @interface serviceexchangeAnchorApplyNotice_PushNotice : GPBMessage

/** 审核状态 */
@property(nonatomic, readwrite) enum serviceexchangeApplyLiveStatus applyLiveStatus;

/** 审核未通过原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *auditFailReason;

@end

/**
 * Fetches the raw value of a @c serviceexchangeAnchorApplyNotice_PushNotice's @c applyLiveStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeAnchorApplyNotice_PushNotice_ApplyLiveStatus_RawValue(serviceexchangeAnchorApplyNotice_PushNotice *message);
/**
 * Sets the raw value of an @c serviceexchangeAnchorApplyNotice_PushNotice's @c applyLiveStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeAnchorApplyNotice_PushNotice_ApplyLiveStatus_RawValue(serviceexchangeAnchorApplyNotice_PushNotice *message, int32_t value);

#pragma mark - serviceexchangeAnchorLeaveLiveNotice

typedef GPB_ENUM(serviceexchangeAnchorLeaveLiveNotice_FieldNumber) {
  serviceexchangeAnchorLeaveLiveNotice_FieldNumber_Version = 1,
  serviceexchangeAnchorLeaveLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 主播离开直播间 pushType:AnchorLeaveLivePush
 **/
GPB_FINAL @interface serviceexchangeAnchorLeaveLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeAnchorLeaveLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeAnchorLeaveLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeAnchorLeaveLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeAnchorLeaveLiveNotice_PushNotice_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeAnchorLeaveLiveNotice_PushNotice : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeAnchorBackLiveNotice

typedef GPB_ENUM(serviceexchangeAnchorBackLiveNotice_FieldNumber) {
  serviceexchangeAnchorBackLiveNotice_FieldNumber_Version = 1,
  serviceexchangeAnchorBackLiveNotice_FieldNumber_PushNotice = 2,
};

/**
 * 主播回到直播间 pushType:AnchorBackLivePush
 **/
GPB_FINAL @interface serviceexchangeAnchorBackLiveNotice : GPBMessage

/** 推送事件版本 */
@property(nonatomic, readwrite) uint64_t version;

/** 推送通知 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeAnchorBackLiveNotice_PushNotice *pushNotice;
/** Test to see if @c pushNotice has been set. */
@property(nonatomic, readwrite) BOOL hasPushNotice;

@end

#pragma mark - serviceexchangeAnchorBackLiveNotice_PushNotice

typedef GPB_ENUM(serviceexchangeAnchorBackLiveNotice_PushNotice_FieldNumber) {
  serviceexchangeAnchorBackLiveNotice_PushNotice_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeAnchorBackLiveNotice_PushNotice : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
