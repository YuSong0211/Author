// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appv-primary-api-passport.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class appvapiAppConfiguration;
@class appvapiConfig;
@class appvapiContentTag;
@class appvapiExchangeAnchorInfo;
@class appvapiExchangeUnCloseLiveInfo;
@class appvapiIdEncode;
@class appvapiNewMsgCount;
@class appvapiUserInfoBasic;
@class appvapiVipProduct;
@class appvapiVipProductAllInfo;
@class appvapiVipRightInterests;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum appvapiExchangeIsNotAnchorReason

typedef GPB_ENUM(appvapiExchangeIsNotAnchorReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  appvapiExchangeIsNotAnchorReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 审核未通过 */
  appvapiExchangeIsNotAnchorReason_ExchangeIsNotAnchorReasonApplyUnPass = 0,

  /** 等待审核 */
  appvapiExchangeIsNotAnchorReason_ExchangeIsNotAnchorReasonApplyWaiting = 1,

  /** 未申请主播 */
  appvapiExchangeIsNotAnchorReason_ExchangeIsNotAnchorReasonApplyNot = 2,
};

GPBEnumDescriptor *appvapiExchangeIsNotAnchorReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL appvapiExchangeIsNotAnchorReason_IsValidValue(int32_t value);

#pragma mark - appvapiAppvPrimaryApiPassportRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface appvapiAppvPrimaryApiPassportRoot : GPBRootObject
@end

#pragma mark - appvapiEnterRequest

typedef GPB_ENUM(appvapiEnterRequest_FieldNumber) {
  appvapiEnterRequest_FieldNumber_UcToken = 1,
};

GPB_FINAL @interface appvapiEnterRequest : GPBMessage

/** 使用 jwt 还是去 uc 校验 ? */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ucToken;

@end

#pragma mark - appvapiEnterResponse

typedef GPB_ENUM(appvapiEnterResponse_FieldNumber) {
  appvapiEnterResponse_FieldNumber_Token = 1,
  appvapiEnterResponse_FieldNumber_IsNew = 2,
  appvapiEnterResponse_FieldNumber_UserInfo = 3,
  appvapiEnterResponse_FieldNumber_Config = 4,
};

GPB_FINAL @interface appvapiEnterResponse : GPBMessage

/** 用户 token 使用 此 api 访问其它 api 可能 api 需要登陆才能访问 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

/** 是否为新用户 */
@property(nonatomic, readwrite) BOOL isNew;

/** 用户基本信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiUserInfoBasic *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

/** 服务配置 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiConfig *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

@end

#pragma mark - appvapiConfigRequest

typedef GPB_ENUM(appvapiConfigRequest_FieldNumber) {
  appvapiConfigRequest_FieldNumber_BootDataVersion = 2,
};

GPB_FINAL @interface appvapiConfigRequest : GPBMessage

/**
 * 客户端持有的 boot 配置的版本, 版本不刷新，会直接返回 空数据
 * 每次更新也是使用 当前版本对比之后的差异值进行更新到客户端
 **/
@property(nonatomic, readwrite) uint64_t bootDataVersion;

@end

#pragma mark - appvapiConfigResponse

typedef GPB_ENUM(appvapiConfigResponse_FieldNumber) {
  appvapiConfigResponse_FieldNumber_Config = 1,
};

GPB_FINAL @interface appvapiConfigResponse : GPBMessage

/** 服务配置 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiConfig *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

@end

#pragma mark - appvapiConfig

typedef GPB_ENUM(appvapiConfig_FieldNumber) {
  appvapiConfig_FieldNumber_SystemTagArray = 1,
  appvapiConfig_FieldNumber_AppConfigurationsArray = 2,
  appvapiConfig_FieldNumber_VipProductAllInfo = 3,
  appvapiConfig_FieldNumber_PostTagArray = 4,
};

GPB_FINAL @interface appvapiConfig : GPBMessage

/** 系统标签(视频标签 参数名未修改) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiContentTag*> *systemTagArray;
/** The number of items in @c systemTagArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger systemTagArray_Count;

/** 系统配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiAppConfiguration*> *appConfigurationsArray;
/** The number of items in @c appConfigurationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger appConfigurationsArray_Count;

/** 会员相关信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiVipProductAllInfo *vipProductAllInfo;
/** Test to see if @c vipProductAllInfo has been set. */
@property(nonatomic, readwrite) BOOL hasVipProductAllInfo;

/** 帖子标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiContentTag*> *postTagArray;
/** The number of items in @c postTagArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger postTagArray_Count;

@end

#pragma mark - appvapiVipProductAllInfo

typedef GPB_ENUM(appvapiVipProductAllInfo_FieldNumber) {
  appvapiVipProductAllInfo_FieldNumber_VipProductsArray = 1,
  appvapiVipProductAllInfo_FieldNumber_VipRightInterestssArray = 2,
};

GPB_FINAL @interface appvapiVipProductAllInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiVipProduct*> *vipProductsArray;
/** The number of items in @c vipProductsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vipProductsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiVipRightInterests*> *vipRightInterestssArray;
/** The number of items in @c vipRightInterestssArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vipRightInterestssArray_Count;

@end

#pragma mark - appvapiAppConfiguration

typedef GPB_ENUM(appvapiAppConfiguration_FieldNumber) {
  appvapiAppConfiguration_FieldNumber_ConfigurationItemKey = 1,
  appvapiAppConfiguration_FieldNumber_ConfigurationItemValue = 2,
};

GPB_FINAL @interface appvapiAppConfiguration : GPBMessage

/** 配置的key */
@property(nonatomic, readwrite, copy, null_resettable) NSString *configurationItemKey;

/** 配置项 Value */
@property(nonatomic, readwrite, copy, null_resettable) NSString *configurationItemValue;

@end

#pragma mark - appvapiChatAuthRequest

/**
 * APP聊天鉴权请求参数
 **/
GPB_FINAL @interface appvapiChatAuthRequest : GPBMessage

@end

#pragma mark - appvapiChatAuthResponse

typedef GPB_ENUM(appvapiChatAuthResponse_FieldNumber) {
  appvapiChatAuthResponse_FieldNumber_ChatToken = 1,
  appvapiChatAuthResponse_FieldNumber_GatewayJwtToken = 2,
  appvapiChatAuthResponse_FieldNumber_NewMsgCount = 3,
  appvapiChatAuthResponse_FieldNumber_ExchangeAnchorInfo = 4,
  appvapiChatAuthResponse_FieldNumber_ExchangeUnCloseLiveInfo = 5,
};

/**
 * APP聊天鉴权响应参数
 **/
GPB_FINAL @interface appvapiChatAuthResponse : GPBMessage

/** 请求chat服务的token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chatToken;

/** 与网关服务建立socket的token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gatewayJwtToken;

/** 当前离线时的新消息计数 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiNewMsgCount *newMsgCount NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newMsgCount has been set. */
@property(nonatomic, readwrite) BOOL hasNewMsgCount;

/** 聊天服务主播信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiExchangeAnchorInfo *exchangeAnchorInfo;
/** Test to see if @c exchangeAnchorInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExchangeAnchorInfo;

/** 未关闭的直播间信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiExchangeUnCloseLiveInfo *exchangeUnCloseLiveInfo;
/** Test to see if @c exchangeUnCloseLiveInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExchangeUnCloseLiveInfo;

@end

#pragma mark - appvapiGetNoticeResponse

typedef GPB_ENUM(appvapiGetNoticeResponse_FieldNumber) {
  appvapiGetNoticeResponse_FieldNumber_NewMsgCount = 1,
};

/**
 * 获取通知信息响应参数
 **/
GPB_FINAL @interface appvapiGetNoticeResponse : GPBMessage

/** 当前离线时的新消息计数 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiNewMsgCount *newMsgCount NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newMsgCount has been set. */
@property(nonatomic, readwrite) BOOL hasNewMsgCount;

@end

#pragma mark - appvapiNewMsgCount

typedef GPB_ENUM(appvapiNewMsgCount_FieldNumber) {
  appvapiNewMsgCount_FieldNumber_ChatNewCount = 1,
  appvapiNewMsgCount_FieldNumber_SubNewCount = 2,
  appvapiNewMsgCount_FieldNumber_WorkOrderNewCount = 3,
};

GPB_FINAL @interface appvapiNewMsgCount : GPBMessage

/** 聊天消息 */
@property(nonatomic, readwrite) uint32_t chatNewCount;

/** 互动消息 */
@property(nonatomic, readwrite) uint32_t subNewCount;

/** 工单 */
@property(nonatomic, readwrite) uint32_t workOrderNewCount;

@end

#pragma mark - appvapiExchangeAnchorInfo

typedef GPB_ENUM(appvapiExchangeAnchorInfo_FieldNumber) {
  appvapiExchangeAnchorInfo_FieldNumber_IsAnchor = 1,
  appvapiExchangeAnchorInfo_FieldNumber_ExchangeIsNotAnchorReason = 2,
};

GPB_FINAL @interface appvapiExchangeAnchorInfo : GPBMessage

/** 是否是主播 */
@property(nonatomic, readwrite) BOOL isAnchor;

/** 不是主播的原因 */
@property(nonatomic, readwrite) appvapiExchangeIsNotAnchorReason exchangeIsNotAnchorReason;

@end

/**
 * Fetches the raw value of a @c appvapiExchangeAnchorInfo's @c exchangeIsNotAnchorReason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t appvapiExchangeAnchorInfo_ExchangeIsNotAnchorReason_RawValue(appvapiExchangeAnchorInfo *message);
/**
 * Sets the raw value of an @c appvapiExchangeAnchorInfo's @c exchangeIsNotAnchorReason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetappvapiExchangeAnchorInfo_ExchangeIsNotAnchorReason_RawValue(appvapiExchangeAnchorInfo *message, int32_t value);

#pragma mark - appvapiExchangeUnCloseLiveInfo

typedef GPB_ENUM(appvapiExchangeUnCloseLiveInfo_FieldNumber) {
  appvapiExchangeUnCloseLiveInfo_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface appvapiExchangeUnCloseLiveInfo : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
