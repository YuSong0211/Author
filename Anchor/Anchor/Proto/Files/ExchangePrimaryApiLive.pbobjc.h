// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange-primary-api-live.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class serviceexchangeApplyLiveInfo;
@class serviceexchangeAudienceAnchorRelation;
@class serviceexchangeChatUser;
@class serviceexchangeInitLiveTag;
@class serviceexchangeLiveGift;
@class serviceexchangeLiveRewardRank;
@class serviceexchangeLiveRoom;
@class serviceexchangeLiveTag;
@class utilidentitysdkIdEncode;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum serviceexchangeApplyLiveStatus

typedef GPB_ENUM(serviceexchangeApplyLiveStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  serviceexchangeApplyLiveStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认值/未提交过审核 */
  serviceexchangeApplyLiveStatus_ApplyLiveStatusUnspecified = 0,

  /** 审核通过 */
  serviceexchangeApplyLiveStatus_ApplyLiveStatusPass = 1,

  /** 等待审核 */
  serviceexchangeApplyLiveStatus_ApplyLiveStatusWaiting = 2,

  /** 审核未通过 */
  serviceexchangeApplyLiveStatus_ApplyLiveStatusUnPass = 3,
};

GPBEnumDescriptor *serviceexchangeApplyLiveStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL serviceexchangeApplyLiveStatus_IsValidValue(int32_t value);

#pragma mark - Enum serviceexchangeLiveStatus

typedef GPB_ENUM(serviceexchangeLiveStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  serviceexchangeLiveStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认值 */
  serviceexchangeLiveStatus_LiveStatusUnspecified = 0,

  /** 初始化 */
  serviceexchangeLiveStatus_LiveStatusInit = 1,

  /** 直播中 */
  serviceexchangeLiveStatus_LiveStatusLiving = 2,

  /** 已结束 */
  serviceexchangeLiveStatus_LiveStatusEnd = 3,
};

GPBEnumDescriptor *serviceexchangeLiveStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL serviceexchangeLiveStatus_IsValidValue(int32_t value);

#pragma mark - Enum serviceexchangeRankType

typedef GPB_ENUM(serviceexchangeRankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  serviceexchangeRankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 日榜 */
  serviceexchangeRankType_RankTypeDay = 0,

  /** 周榜 */
  serviceexchangeRankType_RankTypeWeek = 1,

  /** 总榜 */
  serviceexchangeRankType_RankTypeAll = 2,
};

GPBEnumDescriptor *serviceexchangeRankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL serviceexchangeRankType_IsValidValue(int32_t value);

#pragma mark - Enum serviceexchangeFollowStatus

typedef GPB_ENUM(serviceexchangeFollowStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  serviceexchangeFollowStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  serviceexchangeFollowStatus_FollowStatusUnspecified = 0,

  /** 已关注 */
  serviceexchangeFollowStatus_FollowStatusFollowed = 1,

  /** 未关注 */
  serviceexchangeFollowStatus_FollowStatusUnFollow = 2,
};

GPBEnumDescriptor *serviceexchangeFollowStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL serviceexchangeFollowStatus_IsValidValue(int32_t value);

#pragma mark - serviceexchangeExchangePrimaryApiLiveRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface serviceexchangeExchangePrimaryApiLiveRoot : GPBRootObject
@end

#pragma mark - serviceexchangeListLiveRewardRankRequest

typedef GPB_ENUM(serviceexchangeListLiveRewardRankRequest_FieldNumber) {
  serviceexchangeListLiveRewardRankRequest_FieldNumber_AnchorId = 1,
  serviceexchangeListLiveRewardRankRequest_FieldNumber_RankType = 2,
};

GPB_FINAL @interface serviceexchangeListLiveRewardRankRequest : GPBMessage

/** 主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 排行类型 */
@property(nonatomic, readwrite) serviceexchangeRankType rankType;

@end

/**
 * Fetches the raw value of a @c serviceexchangeListLiveRewardRankRequest's @c rankType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeListLiveRewardRankRequest_RankType_RawValue(serviceexchangeListLiveRewardRankRequest *message);
/**
 * Sets the raw value of an @c serviceexchangeListLiveRewardRankRequest's @c rankType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeListLiveRewardRankRequest_RankType_RawValue(serviceexchangeListLiveRewardRankRequest *message, int32_t value);

#pragma mark - serviceexchangeListLiveRewardRankResponse

typedef GPB_ENUM(serviceexchangeListLiveRewardRankResponse_FieldNumber) {
  serviceexchangeListLiveRewardRankResponse_FieldNumber_LiveRewardRanksArray = 1,
};

GPB_FINAL @interface serviceexchangeListLiveRewardRankResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveRewardRank*> *liveRewardRanksArray;
/** The number of items in @c liveRewardRanksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveRewardRanksArray_Count;

@end

#pragma mark - serviceexchangeLiveRewardRank

typedef GPB_ENUM(serviceexchangeLiveRewardRank_FieldNumber) {
  serviceexchangeLiveRewardRank_FieldNumber_ChatUser = 1,
  serviceexchangeLiveRewardRank_FieldNumber_AudienceLevel = 2,
  serviceexchangeLiveRewardRank_FieldNumber_RewardAmount = 3,
};

GPB_FINAL @interface serviceexchangeLiveRewardRank : GPBMessage

/** 打赏用户基本信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 粉丝等级 */
@property(nonatomic, readwrite) uint32_t audienceLevel;

/** 打赏金额 */
@property(nonatomic, readwrite) uint64_t rewardAmount;

@end

#pragma mark - serviceexchangeGetLiveAnchorInfoRequest

typedef GPB_ENUM(serviceexchangeGetLiveAnchorInfoRequest_FieldNumber) {
  serviceexchangeGetLiveAnchorInfoRequest_FieldNumber_AnchorId = 1,
};

GPB_FINAL @interface serviceexchangeGetLiveAnchorInfoRequest : GPBMessage

/** 主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

@end

#pragma mark - serviceexchangeGetLiveAudienceInfoRequest

typedef GPB_ENUM(serviceexchangeGetLiveAudienceInfoRequest_FieldNumber) {
  serviceexchangeGetLiveAudienceInfoRequest_FieldNumber_AnchorId = 1,
  serviceexchangeGetLiveAudienceInfoRequest_FieldNumber_AudienceUid = 2,
};

GPB_FINAL @interface serviceexchangeGetLiveAudienceInfoRequest : GPBMessage

/** 主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 观众uid */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *audienceUid;
/** Test to see if @c audienceUid has been set. */
@property(nonatomic, readwrite) BOOL hasAudienceUid;

@end

#pragma mark - serviceexchangeGetLiveUserInfoResponse

typedef GPB_ENUM(serviceexchangeGetLiveUserInfoResponse_FieldNumber) {
  serviceexchangeGetLiveUserInfoResponse_FieldNumber_ChatUser = 1,
  serviceexchangeGetLiveUserInfoResponse_FieldNumber_LiveLevel = 2,
  serviceexchangeGetLiveUserInfoResponse_FieldNumber_FansCount = 3,
  serviceexchangeGetLiveUserInfoResponse_FieldNumber_FollowStatus = 4,
};

GPB_FINAL @interface serviceexchangeGetLiveUserInfoResponse : GPBMessage

/** 用户基本信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 如果查询主播 该字段表示主播等级 如果是粉丝 该等级表示粉丝等级 */
@property(nonatomic, readwrite) uint32_t liveLevel;

/** 粉丝数 */
@property(nonatomic, readwrite) uint32_t fansCount;

/** 关注状态 */
@property(nonatomic, readwrite) serviceexchangeFollowStatus followStatus;

@end

/**
 * Fetches the raw value of a @c serviceexchangeGetLiveUserInfoResponse's @c followStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeGetLiveUserInfoResponse_FollowStatus_RawValue(serviceexchangeGetLiveUserInfoResponse *message);
/**
 * Sets the raw value of an @c serviceexchangeGetLiveUserInfoResponse's @c followStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeGetLiveUserInfoResponse_FollowStatus_RawValue(serviceexchangeGetLiveUserInfoResponse *message, int32_t value);

#pragma mark - serviceexchangeFollowRequest

typedef GPB_ENUM(serviceexchangeFollowRequest_FieldNumber) {
  serviceexchangeFollowRequest_FieldNumber_AnchorId = 1,
  serviceexchangeFollowRequest_FieldNumber_LiveId = 2,
};

GPB_FINAL @interface serviceexchangeFollowRequest : GPBMessage

/** 关注的主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 直播id (仅在直播房间中关注传) */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeUnfollowRequest

typedef GPB_ENUM(serviceexchangeUnfollowRequest_FieldNumber) {
  serviceexchangeUnfollowRequest_FieldNumber_AnchorId = 1,
};

GPB_FINAL @interface serviceexchangeUnfollowRequest : GPBMessage

/** 取关的主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

@end

#pragma mark - serviceexchangeLiveMessageApi

/**
 * 互动消息相关
 **/
GPB_FINAL @interface serviceexchangeLiveMessageApi : GPBMessage

@end

#pragma mark - serviceexchangeApplyLiveRequest

typedef GPB_ENUM(serviceexchangeApplyLiveRequest_FieldNumber) {
  serviceexchangeApplyLiveRequest_FieldNumber_RealName = 1,
  serviceexchangeApplyLiveRequest_FieldNumber_IdCard = 2,
  serviceexchangeApplyLiveRequest_FieldNumber_Description_p = 3,
};

/**
 * 直播申请请求
 **/
GPB_FINAL @interface serviceexchangeApplyLiveRequest : GPBMessage

/** 真实姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;

/** 证件号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *idCard;

/** 主播描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

#pragma mark - serviceexchangeApplyLiveInfo

typedef GPB_ENUM(serviceexchangeApplyLiveInfo_FieldNumber) {
  serviceexchangeApplyLiveInfo_FieldNumber_RealName = 1,
  serviceexchangeApplyLiveInfo_FieldNumber_IdCard = 2,
  serviceexchangeApplyLiveInfo_FieldNumber_Desc = 3,
  serviceexchangeApplyLiveInfo_FieldNumber_UnPassReason = 5,
};

GPB_FINAL @interface serviceexchangeApplyLiveInfo : GPBMessage

/** 真实姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;

/** 证件号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *idCard;

/** 主播描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 未通过原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unPassReason;

@end

#pragma mark - serviceexchangeAnchorPersonalCenterResponse

typedef GPB_ENUM(serviceexchangeAnchorPersonalCenterResponse_FieldNumber) {
  serviceexchangeAnchorPersonalCenterResponse_FieldNumber_ApplyLiveStatus = 1,
  serviceexchangeAnchorPersonalCenterResponse_FieldNumber_ApplyLiveInfo = 2,
  serviceexchangeAnchorPersonalCenterResponse_FieldNumber_AnchorLevel = 3,
  serviceexchangeAnchorPersonalCenterResponse_FieldNumber_FansCount = 4,
};

/**
 * 钱包余额不从该口获取 客户端直接复用原油钱包余额信息
 **/
GPB_FINAL @interface serviceexchangeAnchorPersonalCenterResponse : GPBMessage

/** 直播申请状态 */
@property(nonatomic, readwrite) serviceexchangeApplyLiveStatus applyLiveStatus;

/** 审核信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeApplyLiveInfo *applyLiveInfo;
/** Test to see if @c applyLiveInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplyLiveInfo;

/** 主播等级 */
@property(nonatomic, readwrite) uint32_t anchorLevel;

/** 粉丝数量 */
@property(nonatomic, readwrite) uint32_t fansCount;

@end

/**
 * Fetches the raw value of a @c serviceexchangeAnchorPersonalCenterResponse's @c applyLiveStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeAnchorPersonalCenterResponse_ApplyLiveStatus_RawValue(serviceexchangeAnchorPersonalCenterResponse *message);
/**
 * Sets the raw value of an @c serviceexchangeAnchorPersonalCenterResponse's @c applyLiveStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeAnchorPersonalCenterResponse_ApplyLiveStatus_RawValue(serviceexchangeAnchorPersonalCenterResponse *message, int32_t value);

#pragma mark - serviceexchangeListLiveRequest

typedef GPB_ENUM(serviceexchangeListLiveRequest_FieldNumber) {
  serviceexchangeListLiveRequest_FieldNumber_Offset = 1,
};

/**
 * 直播列表 排序规则 热度DESC>推荐DESC
 **/
GPB_FINAL @interface serviceexchangeListLiveRequest : GPBMessage

/** 分页页码 */
@property(nonatomic, readwrite) uint32_t offset;

@end

#pragma mark - serviceexchangeListLiveResponse

typedef GPB_ENUM(serviceexchangeListLiveResponse_FieldNumber) {
  serviceexchangeListLiveResponse_FieldNumber_LiveRoomsArray = 1,
};

GPB_FINAL @interface serviceexchangeListLiveResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveRoom*> *liveRoomsArray;
/** The number of items in @c liveRoomsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveRoomsArray_Count;

@end

#pragma mark - serviceexchangeListLiveByTagRequest

typedef GPB_ENUM(serviceexchangeListLiveByTagRequest_FieldNumber) {
  serviceexchangeListLiveByTagRequest_FieldNumber_LiveTagId = 1,
  serviceexchangeListLiveByTagRequest_FieldNumber_Offset = 2,
};

/**
 * 分页&排序规则同推荐直播列表一致
 **/
GPB_FINAL @interface serviceexchangeListLiveByTagRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveTagId;
/** Test to see if @c liveTagId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveTagId;

/** 分页页码 */
@property(nonatomic, readwrite) uint32_t offset;

@end

#pragma mark - serviceexchangeListLiveByTagResponse

typedef GPB_ENUM(serviceexchangeListLiveByTagResponse_FieldNumber) {
  serviceexchangeListLiveByTagResponse_FieldNumber_LiveRoomsArray = 1,
};

GPB_FINAL @interface serviceexchangeListLiveByTagResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveRoom*> *liveRoomsArray;
/** The number of items in @c liveRoomsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveRoomsArray_Count;

@end

#pragma mark - serviceexchangeOpenLiveRequest

typedef GPB_ENUM(serviceexchangeOpenLiveRequest_FieldNumber) {
  serviceexchangeOpenLiveRequest_FieldNumber_LiveTitle = 1,
  serviceexchangeOpenLiveRequest_FieldNumber_LiveTagIdsArray = 2,
};

GPB_FINAL @interface serviceexchangeOpenLiveRequest : GPBMessage

/** 直播标签 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveTitle;

/** 直播标签id */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<utilidentitysdkIdEncode*> *liveTagIdsArray;
/** The number of items in @c liveTagIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveTagIdsArray_Count;

@end

#pragma mark - serviceexchangeLivePushStreamSuccessRequest

typedef GPB_ENUM(serviceexchangeLivePushStreamSuccessRequest_FieldNumber) {
  serviceexchangeLivePushStreamSuccessRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeLivePushStreamSuccessRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeOpenLiveResponse

typedef GPB_ENUM(serviceexchangeOpenLiveResponse_FieldNumber) {
  serviceexchangeOpenLiveResponse_FieldNumber_PushStreamURL = 1,
  serviceexchangeOpenLiveResponse_FieldNumber_LiveId = 2,
  serviceexchangeOpenLiveResponse_FieldNumber_AnchorId = 3,
  serviceexchangeOpenLiveResponse_FieldNumber_ChatUser = 4,
  serviceexchangeOpenLiveResponse_FieldNumber_UnCloseLive = 5,
  serviceexchangeOpenLiveResponse_FieldNumber_UnCloseLiveHot = 6,
};

/**
 * 开启直播返回消息体
 **/
GPB_FINAL @interface serviceexchangeOpenLiveResponse : GPBMessage

/** 推流地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushStreamURL;

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 主播基本信息(包含主播uid) */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/**
 * 理论上该接口不会返回未结束的直播间信息 在登陆的时候就已经将未关闭的直播间信息返回 此处为兜底操作
 * 当前返回信息是否是未关闭的直播间信息
 **/
@property(nonatomic, readwrite) BOOL unCloseLive;

/** 未关闭直播间的热度 */
@property(nonatomic, readwrite) uint32_t unCloseLiveHot;

@end

#pragma mark - serviceexchangeEnterLiveRoomRequest

typedef GPB_ENUM(serviceexchangeEnterLiveRoomRequest_FieldNumber) {
  serviceexchangeEnterLiveRoomRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeEnterLiveRoomRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeExitLiveRoomRequest

typedef GPB_ENUM(serviceexchangeExitLiveRoomRequest_FieldNumber) {
  serviceexchangeExitLiveRoomRequest_FieldNumber_LiveId = 1,
  serviceexchangeExitLiveRoomRequest_FieldNumber_IsNeedPushUserList = 2,
};

GPB_FINAL @interface serviceexchangeExitLiveRoomRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/**
 * 是否需要推送新的直播间用户列表
 * 当退出的直播间用户在当前显示的用户列表中切直播间人数大于10的时候 该值传true
 **/
@property(nonatomic, readwrite) BOOL isNeedPushUserList;

@end

#pragma mark - serviceexchangeLiveUserListRequest

typedef GPB_ENUM(serviceexchangeLiveUserListRequest_FieldNumber) {
  serviceexchangeLiveUserListRequest_FieldNumber_LiveId = 1,
  serviceexchangeLiveUserListRequest_FieldNumber_Limit = 2,
};

GPB_FINAL @interface serviceexchangeLiveUserListRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 返回直播间用户列表数量 */
@property(nonatomic, readwrite) uint32_t limit;

@end

#pragma mark - serviceexchangeEnterLiveRoomResponse

typedef GPB_ENUM(serviceexchangeEnterLiveRoomResponse_FieldNumber) {
  serviceexchangeEnterLiveRoomResponse_FieldNumber_LivingRoomStatus = 1,
  serviceexchangeEnterLiveRoomResponse_FieldNumber_LiveRoom = 2,
  serviceexchangeEnterLiveRoomResponse_FieldNumber_AudienceAnchorRelation = 3,
};

GPB_FINAL @interface serviceexchangeEnterLiveRoomResponse : GPBMessage

/** 直播间状态 false:不可用  true:可用 */
@property(nonatomic, readwrite) BOOL livingRoomStatus;

/** 直播间信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeLiveRoom *liveRoom;
/** Test to see if @c liveRoom has been set. */
@property(nonatomic, readwrite) BOOL hasLiveRoom;

/** 当前用户与主播关系 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeAudienceAnchorRelation *audienceAnchorRelation;
/** Test to see if @c audienceAnchorRelation has been set. */
@property(nonatomic, readwrite) BOOL hasAudienceAnchorRelation;

@end

#pragma mark - serviceexchangeStarLiveRequest

typedef GPB_ENUM(serviceexchangeStarLiveRequest_FieldNumber) {
  serviceexchangeStarLiveRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeStarLiveRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeCloseLiveRequest

typedef GPB_ENUM(serviceexchangeCloseLiveRequest_FieldNumber) {
  serviceexchangeCloseLiveRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeCloseLiveRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeCloseLiveResponse

typedef GPB_ENUM(serviceexchangeCloseLiveResponse_FieldNumber) {
  serviceexchangeCloseLiveResponse_FieldNumber_LiveId = 1,
  serviceexchangeCloseLiveResponse_FieldNumber_IncreaseFanCount = 2,
  serviceexchangeCloseLiveResponse_FieldNumber_ViewCount = 3,
  serviceexchangeCloseLiveResponse_FieldNumber_LiveCombined = 4,
  serviceexchangeCloseLiveResponse_FieldNumber_LiveTime = 5,
};

GPB_FINAL @interface serviceexchangeCloseLiveResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 新增粉丝数 */
@property(nonatomic, readwrite) uint32_t increaseFanCount;

/** 观看书 */
@property(nonatomic, readwrite) uint32_t viewCount;

/** 直播收益 */
@property(nonatomic, readwrite) uint64_t liveCombined;

/** 直播时长 */
@property(nonatomic, readwrite) uint64_t liveTime;

@end

#pragma mark - serviceexchangeLiveChatRequest

typedef GPB_ENUM(serviceexchangeLiveChatRequest_FieldNumber) {
  serviceexchangeLiveChatRequest_FieldNumber_LiveId = 1,
  serviceexchangeLiveChatRequest_FieldNumber_Content = 2,
};

GPB_FINAL @interface serviceexchangeLiveChatRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 聊天内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - serviceexchangeAudienceAnchorRelation

typedef GPB_ENUM(serviceexchangeAudienceAnchorRelation_FieldNumber) {
  serviceexchangeAudienceAnchorRelation_FieldNumber_IsFollow = 1,
};

GPB_FINAL @interface serviceexchangeAudienceAnchorRelation : GPBMessage

/** 是否关注当前主播 */
@property(nonatomic, readwrite) BOOL isFollow;

@end

#pragma mark - serviceexchangeRewardAnchorLiveRequest

typedef GPB_ENUM(serviceexchangeRewardAnchorLiveRequest_FieldNumber) {
  serviceexchangeRewardAnchorLiveRequest_FieldNumber_LiveId = 1,
  serviceexchangeRewardAnchorLiveRequest_FieldNumber_GiftId = 2,
  serviceexchangeRewardAnchorLiveRequest_FieldNumber_GiftCount = 3,
};

GPB_FINAL @interface serviceexchangeRewardAnchorLiveRequest : GPBMessage

/** 直播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 礼物id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *giftId;
/** Test to see if @c giftId has been set. */
@property(nonatomic, readwrite) BOOL hasGiftId;

/** 礼物数量 */
@property(nonatomic, readwrite) uint32_t giftCount;

@end

#pragma mark - serviceexchangeLiveRoom

typedef GPB_ENUM(serviceexchangeLiveRoom_FieldNumber) {
  serviceexchangeLiveRoom_FieldNumber_LiveId = 1,
  serviceexchangeLiveRoom_FieldNumber_AnchorId = 2,
  serviceexchangeLiveRoom_FieldNumber_LiveRoomNumber = 3,
  serviceexchangeLiveRoom_FieldNumber_LiveTitle = 4,
  serviceexchangeLiveRoom_FieldNumber_LiveTagsArray = 5,
  serviceexchangeLiveRoom_FieldNumber_LiveUserInfo = 6,
  serviceexchangeLiveRoom_FieldNumber_LiveHot = 7,
  serviceexchangeLiveRoom_FieldNumber_LiveStar = 8,
  serviceexchangeLiveRoom_FieldNumber_LivePlayStreamURL = 9,
};

GPB_FINAL @interface serviceexchangeLiveRoom : GPBMessage

/** 直播id(此次直播id) */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

/** 主播id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 直播房间号 与 主播id一一对应 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveRoomNumber;

/** 直播标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveTitle;

/** 直播标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveTag*> *liveTagsArray;
/** The number of items in @c liveTagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveTagsArray_Count;

/** 主播用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *liveUserInfo;
/** Test to see if @c liveUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasLiveUserInfo;

/** 直播间热度 */
@property(nonatomic, readwrite) uint32_t liveHot;

/** 直播点赞数 */
@property(nonatomic, readwrite) uint32_t liveStar;

/** 播放流地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *livePlayStreamURL;

@end

#pragma mark - serviceexchangeLiveTag

typedef GPB_ENUM(serviceexchangeLiveTag_FieldNumber) {
  serviceexchangeLiveTag_FieldNumber_Id_p = 1,
  serviceexchangeLiveTag_FieldNumber_LiveTagName = 2,
};

GPB_FINAL @interface serviceexchangeLiveTag : GPBMessage

/** 直播标签id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** 直播标签名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveTagName;

@end

#pragma mark - serviceexchangeAnchorLeaveLiveRequest

typedef GPB_ENUM(serviceexchangeAnchorLeaveLiveRequest_FieldNumber) {
  serviceexchangeAnchorLeaveLiveRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeAnchorLeaveLiveRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeAnchorBackLiveRequest

typedef GPB_ENUM(serviceexchangeAnchorBackLiveRequest_FieldNumber) {
  serviceexchangeAnchorBackLiveRequest_FieldNumber_LiveId = 1,
};

GPB_FINAL @interface serviceexchangeAnchorBackLiveRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@end

#pragma mark - serviceexchangeGetLiveBaseDataResponse

typedef GPB_ENUM(serviceexchangeGetLiveBaseDataResponse_FieldNumber) {
  serviceexchangeGetLiveBaseDataResponse_FieldNumber_LiveTagsArray = 1,
  serviceexchangeGetLiveBaseDataResponse_FieldNumber_LiveGiftsArray = 2,
};

GPB_FINAL @interface serviceexchangeGetLiveBaseDataResponse : GPBMessage

/** 直播标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeInitLiveTag*> *liveTagsArray;
/** The number of items in @c liveTagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveTagsArray_Count;

/** 直播礼物 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveGift*> *liveGiftsArray;
/** The number of items in @c liveGiftsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveGiftsArray_Count;

@end

#pragma mark - serviceexchangeInitLiveTag

typedef GPB_ENUM(serviceexchangeInitLiveTag_FieldNumber) {
  serviceexchangeInitLiveTag_FieldNumber_Id_p = 1,
  serviceexchangeInitLiveTag_FieldNumber_LiveTagName = 2,
  serviceexchangeInitLiveTag_FieldNumber_IsMain = 3,
};

GPB_FINAL @interface serviceexchangeInitLiveTag : GPBMessage

/** 直播标签id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** 直播标签名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveTagName;

/** 是否是主推标签 */
@property(nonatomic, readwrite) BOOL isMain;

@end

#pragma mark - serviceexchangeLiveGift

typedef GPB_ENUM(serviceexchangeLiveGift_FieldNumber) {
  serviceexchangeLiveGift_FieldNumber_Id_p = 1,
  serviceexchangeLiveGift_FieldNumber_GiftName = 2,
  serviceexchangeLiveGift_FieldNumber_GiftAmount = 3,
  serviceexchangeLiveGift_FieldNumber_OpenFullScreen = 4,
};

GPB_FINAL @interface serviceexchangeLiveGift : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** 礼物名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

/** 礼物金额/分 */
@property(nonatomic, readwrite) uint32_t giftAmount;

/** 是否开启全屏特效 */
@property(nonatomic, readwrite) BOOL openFullScreen;

@end

#pragma mark - serviceexchangeListMyFollowLiveRequest

typedef GPB_ENUM(serviceexchangeListMyFollowLiveRequest_FieldNumber) {
  serviceexchangeListMyFollowLiveRequest_FieldNumber_Offset = 1,
};

GPB_FINAL @interface serviceexchangeListMyFollowLiveRequest : GPBMessage

@property(nonatomic, readwrite) uint32_t offset;

@end

#pragma mark - serviceexchangeListMyFollowLiveResponse

typedef GPB_ENUM(serviceexchangeListMyFollowLiveResponse_FieldNumber) {
  serviceexchangeListMyFollowLiveResponse_FieldNumber_LiveRoomsArray = 1,
};

GPB_FINAL @interface serviceexchangeListMyFollowLiveResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeLiveRoom*> *liveRoomsArray;
/** The number of items in @c liveRoomsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger liveRoomsArray_Count;

@end

#pragma mark - serviceexchangeGetUnCloseLiveInfoResponse

typedef GPB_ENUM(serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber) {
  serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber_LiveId = 1,
  serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber_AnchorId = 2,
  serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber_ChatUser = 3,
  serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber_LiveHot = 4,
  serviceexchangeGetUnCloseLiveInfoResponse_FieldNumber_PushStreamURL = 5,
};

GPB_FINAL @interface serviceexchangeGetUnCloseLiveInfoResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *liveId;
/** Test to see if @c liveId has been set. */
@property(nonatomic, readwrite) BOOL hasLiveId;

@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *anchorId;
/** Test to see if @c anchorId has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorId;

/** 主播基础信息 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeChatUser *chatUser;
/** Test to see if @c chatUser has been set. */
@property(nonatomic, readwrite) BOOL hasChatUser;

/** 直播间热度 */
@property(nonatomic, readwrite) uint32_t liveHot;

/** 直播推流地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pushStreamURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
