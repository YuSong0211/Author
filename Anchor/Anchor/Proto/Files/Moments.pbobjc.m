// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moments.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Moments.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(apimomentsConfigTagCollec);
GPBObjCClassDeclaration(apimomentsMomentsUserInfo);
GPBObjCClassDeclaration(apimomentsPublishItem);
GPBObjCClassDeclaration(apimomentsPushlishResposeItem);
GPBObjCClassDeclaration(apimomentsTagConfig);
GPBObjCClassDeclaration(apimomentsTagItem);

#pragma mark - apimomentsMomentsRoot

@implementation apimomentsMomentsRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - apimomentsMomentsRoot_FileDescriptor

static GPBFileDescriptor *apimomentsMomentsRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"apimoments"
                                                 objcPrefix:@"apimoments"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum apimomentsPublishType

GPBEnumDescriptor *apimomentsPublishType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Image\000Video\000None\000";
    static const int32_t values[] = {
        apimomentsPublishType_Image,
        apimomentsPublishType_Video,
        apimomentsPublishType_None,
    };
    static const char *extraTextFormatInfo = "\003\000\005\000\001\005\000\002\004\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(apimomentsPublishType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:apimomentsPublishType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      
    }
  }
  return descriptor;
}

BOOL apimomentsPublishType_IsValidValue(int32_t value__) {
  switch (value__) {
    case apimomentsPublishType_Image:
    case apimomentsPublishType_Video:
    case apimomentsPublishType_None:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum apimomentsPublishState

GPBEnumDescriptor *apimomentsPublishState_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ExamineWait\000ExamineIng\000ExamineOk\000Examine"
        "Fail\000";
    static const int32_t values[] = {
        apimomentsPublishState_ExamineWait,
        apimomentsPublishState_ExamineIng,
        apimomentsPublishState_ExamineOk,
        apimomentsPublishState_ExamineFail,
    };
    static const char *extraTextFormatInfo = "\004\000\007\204\000\001\007\203\000\002\007\202\000\003\007\204\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(apimomentsPublishState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:apimomentsPublishState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      
    }
  }
  return descriptor;
}

BOOL apimomentsPublishState_IsValidValue(int32_t value__) {
  switch (value__) {
    case apimomentsPublishState_ExamineWait:
    case apimomentsPublishState_ExamineIng:
    case apimomentsPublishState_ExamineOk:
    case apimomentsPublishState_ExamineFail:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - apimomentsPublishRequest

@implementation apimomentsPublishRequest

@dynamic content;
@dynamic publishType;
@dynamic uploadItemArray, uploadItemArray_Count;
@dynamic tagsArray, tagsArray_Count;

typedef struct apimomentsPublishRequest__storage_ {
  uint32_t _has_storage_[1];
  apimomentsPublishType publishType;
  NSString *content;
  NSMutableArray *uploadItemArray;
  NSMutableArray *tagsArray;
} apimomentsPublishRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "content",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishRequest_FieldNumber_Content,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsPublishRequest__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "publishType",
        .dataTypeSpecific.enumDescFunc = apimomentsPublishType_EnumDescriptor,
        .number = apimomentsPublishRequest_FieldNumber_PublishType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsPublishRequest__storage_, publishType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "uploadItemArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsPublishItem),
        .number = apimomentsPublishRequest_FieldNumber_UploadItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsPublishRequest__storage_, uploadItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tagsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsTagItem),
        .number = apimomentsPublishRequest_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsPublishRequest__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsPublishRequest class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsPublishRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\013\000\003\000uploadItem\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t apimomentsPublishRequest_PublishType_RawValue(apimomentsPublishRequest *message) {
  GPBDescriptor *descriptor = [apimomentsPublishRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPublishRequest_FieldNumber_PublishType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetapimomentsPublishRequest_PublishType_RawValue(apimomentsPublishRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [apimomentsPublishRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPublishRequest_FieldNumber_PublishType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - apimomentsPublishRespose

@implementation apimomentsPublishRespose

@dynamic resposeItemArray, resposeItemArray_Count;
@dynamic lastId;
@dynamic hasNext;

typedef struct apimomentsPublishRespose__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *resposeItemArray;
  NSString *lastId;
} apimomentsPublishRespose__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "resposeItemArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsPushlishResposeItem),
        .number = apimomentsPublishRespose_FieldNumber_ResposeItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsPublishRespose__storage_, resposeItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "lastId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishRespose_FieldNumber_LastId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsPublishRespose__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hasNext",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishRespose_FieldNumber_HasNext,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsPublishRespose class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsPublishRespose__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\000resposeItem\000\002\006\000\003\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsMomentsUserInfo

@implementation apimomentsMomentsUserInfo

@dynamic uid;
@dynamic nickname;
@dynamic area;
@dynamic vip;
@dynamic sex;
@dynamic image;
@dynamic creationLevel;

typedef struct apimomentsMomentsUserInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t vip;
  int32_t sex;
  int32_t creationLevel;
  NSString *uid;
  NSString *nickname;
  NSString *area;
  NSString *image;
} apimomentsMomentsUserInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uid",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Uid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, uid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nickname",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Nickname,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, nickname),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "area",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Area,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, area),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "vip",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Vip,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, vip),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Sex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "image",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_Image,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, image),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "creationLevel",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsUserInfo_FieldNumber_CreationLevel,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(apimomentsMomentsUserInfo__storage_, creationLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsMomentsUserInfo class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsMomentsUserInfo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsPushlishResposeItem

@implementation apimomentsPushlishResposeItem

@dynamic hasUserInfo, userInfo;
@dynamic content;
@dynamic publishType;
@dynamic timespan;
@dynamic likes;
@dynamic coments;
@dynamic fav;
@dynamic isLike;
@dynamic momentsId;
@dynamic tagsArray, tagsArray_Count;
@dynamic pubItemArray, pubItemArray_Count;
@dynamic isFav;
@dynamic state;
@dynamic isFollow;

typedef struct apimomentsPushlishResposeItem__storage_ {
  uint32_t _has_storage_[1];
  apimomentsPublishType publishType;
  apimomentsPublishState state;
  apimomentsMomentsUserInfo *userInfo;
  NSString *content;
  NSString *momentsId;
  NSMutableArray *tagsArray;
  NSMutableArray *pubItemArray;
  int64_t timespan;
  int64_t likes;
  int64_t coments;
  int64_t fav;
} apimomentsPushlishResposeItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userInfo",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsMomentsUserInfo),
        .number = apimomentsPushlishResposeItem_FieldNumber_UserInfo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, userInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "content",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_Content,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "publishType",
        .dataTypeSpecific.enumDescFunc = apimomentsPublishType_EnumDescriptor,
        .number = apimomentsPushlishResposeItem_FieldNumber_PublishType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, publishType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "timespan",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_Timespan,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, timespan),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "likes",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_Likes,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, likes),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "coments",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_Coments,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, coments),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "fav",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_Fav,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, fav),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "isLike",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_IsLike,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "momentsId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_MomentsId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, momentsId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tagsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsTagItem),
        .number = apimomentsPushlishResposeItem_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pubItemArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsPublishItem),
        .number = apimomentsPushlishResposeItem_FieldNumber_PubItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, pubItemArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isFav",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_IsFav,
        .hasIndex = 10,
        .offset = 11,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "state",
        .dataTypeSpecific.enumDescFunc = apimomentsPublishState_EnumDescriptor,
        .number = apimomentsPushlishResposeItem_FieldNumber_State,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(apimomentsPushlishResposeItem__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isFollow",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPushlishResposeItem_FieldNumber_IsFollow,
        .hasIndex = 13,
        .offset = 14,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsPushlishResposeItem class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsPushlishResposeItem__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001\010\000\003\013\000\010\006\000\t\t\000\013\000pubItem\000\014\005\000\016\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t apimomentsPushlishResposeItem_PublishType_RawValue(apimomentsPushlishResposeItem *message) {
  GPBDescriptor *descriptor = [apimomentsPushlishResposeItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPushlishResposeItem_FieldNumber_PublishType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetapimomentsPushlishResposeItem_PublishType_RawValue(apimomentsPushlishResposeItem *message, int32_t value) {
  GPBDescriptor *descriptor = [apimomentsPushlishResposeItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPushlishResposeItem_FieldNumber_PublishType];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t apimomentsPushlishResposeItem_State_RawValue(apimomentsPushlishResposeItem *message) {
  GPBDescriptor *descriptor = [apimomentsPushlishResposeItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPushlishResposeItem_FieldNumber_State];
  return GPBGetMessageRawEnumField(message, field);
}

void SetapimomentsPushlishResposeItem_State_RawValue(apimomentsPushlishResposeItem *message, int32_t value) {
  GPBDescriptor *descriptor = [apimomentsPushlishResposeItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:apimomentsPushlishResposeItem_FieldNumber_State];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - apimomentsPublishItem

@implementation apimomentsPublishItem

@dynamic name;
@dynamic converImage;
@dynamic aspratio;

typedef struct apimomentsPublishItem__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSString *converImage;
  NSString *aspratio;
} apimomentsPublishItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishItem_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsPublishItem__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "converImage",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishItem_FieldNumber_ConverImage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsPublishItem__storage_, converImage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "aspratio",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsPublishItem_FieldNumber_Aspratio,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsPublishItem__storage_, aspratio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsPublishItem class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsPublishItem__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsTagItem

@implementation apimomentsTagItem

@dynamic id_p;

typedef struct apimomentsTagItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
} apimomentsTagItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsTagItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsTagItem__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsTagItem class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsTagItem__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsSelectSouail

@implementation apimomentsSelectSouail

@dynamic lastId;
@dynamic userId;

typedef struct apimomentsSelectSouail__storage_ {
  uint32_t _has_storage_[1];
  NSString *lastId;
  NSString *userId;
} apimomentsSelectSouail__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsSelectSouail_FieldNumber_LastId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsSelectSouail__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsSelectSouail_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsSelectSouail__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsSelectSouail class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsSelectSouail__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsSocailDoOrNo

@implementation apimomentsSocailDoOrNo

@dynamic uid;
@dynamic contentsId;

typedef struct apimomentsSocailDoOrNo__storage_ {
  uint32_t _has_storage_[1];
  NSString *uid;
  NSString *contentsId;
} apimomentsSocailDoOrNo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uid",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsSocailDoOrNo_FieldNumber_Uid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsSocailDoOrNo__storage_, uid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentsId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsSocailDoOrNo_FieldNumber_ContentsId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsSocailDoOrNo__storage_, contentsId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsSocailDoOrNo class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsSocailDoOrNo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsMomentsConfig

@implementation apimomentsMomentsConfig

@dynamic hasConfig, config;
@dynamic ossUploadPath;
@dynamic ossEndPoint;

typedef struct apimomentsMomentsConfig__storage_ {
  uint32_t _has_storage_[1];
  apimomentsTagConfig *config;
  NSString *ossUploadPath;
  NSString *ossEndPoint;
} apimomentsMomentsConfig__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "config",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsTagConfig),
        .number = apimomentsMomentsConfig_FieldNumber_Config,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsMomentsConfig__storage_, config),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "ossUploadPath",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsConfig_FieldNumber_OssUploadPath,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsMomentsConfig__storage_, ossUploadPath),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ossEndPoint",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMomentsConfig_FieldNumber_OssEndPoint,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsMomentsConfig__storage_, ossEndPoint),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsMomentsConfig class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsMomentsConfig__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\r\000\003\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsTagConfig

@implementation apimomentsTagConfig

@dynamic tagsArray, tagsArray_Count;

typedef struct apimomentsTagConfig__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *tagsArray;
} apimomentsTagConfig__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsConfigTagCollec),
        .number = apimomentsTagConfig_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(apimomentsTagConfig__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsTagConfig class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsTagConfig__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsConfigTagCollec

@implementation apimomentsConfigTagCollec

@dynamic tagId;
@dynamic softId;
@dynamic tagName;

typedef struct apimomentsConfigTagCollec__storage_ {
  uint32_t _has_storage_[1];
  int32_t tagId;
  int32_t softId;
  NSString *tagName;
} apimomentsConfigTagCollec__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsConfigTagCollec_FieldNumber_TagId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsConfigTagCollec__storage_, tagId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "softId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsConfigTagCollec_FieldNumber_SoftId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsConfigTagCollec__storage_, softId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tagName",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsConfigTagCollec_FieldNumber_TagName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsConfigTagCollec__storage_, tagName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsConfigTagCollec class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsConfigTagCollec__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\005\000\002\006\000\003\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsMsg_AskTags_C

@implementation apimomentsMsg_AskTags_C

@dynamic tagId;
@dynamic lastId;

typedef struct apimomentsMsg_AskTags_C__storage_ {
  uint32_t _has_storage_[1];
  int32_t tagId;
  NSString *lastId;
} apimomentsMsg_AskTags_C__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMsg_AskTags_C_FieldNumber_TagId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsMsg_AskTags_C__storage_, tagId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "lastId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsMsg_AskTags_C_FieldNumber_LastId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(apimomentsMsg_AskTags_C__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsMsg_AskTags_C class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsMsg_AskTags_C__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\005\000\002\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsEmptyResponse

@implementation apimomentsEmptyResponse


typedef struct apimomentsEmptyResponse__storage_ {
  uint32_t _has_storage_[1];
} apimomentsEmptyResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsEmptyResponse class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(apimomentsEmptyResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsEmptyRequest

@implementation apimomentsEmptyRequest


typedef struct apimomentsEmptyRequest__storage_ {
  uint32_t _has_storage_[1];
} apimomentsEmptyRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsEmptyRequest class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(apimomentsEmptyRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsAppendIdEncode

@implementation apimomentsAppendIdEncode

@dynamic lastId;

typedef struct apimomentsAppendIdEncode__storage_ {
  uint32_t _has_storage_[1];
  NSString *lastId;
} apimomentsAppendIdEncode__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastId",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsAppendIdEncode_FieldNumber_LastId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsAppendIdEncode__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsAppendIdEncode class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsAppendIdEncode__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsNIdEncode

@implementation apimomentsNIdEncode

@dynamic id_p;

typedef struct apimomentsNIdEncode__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
} apimomentsNIdEncode__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsNIdEncode_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(apimomentsNIdEncode__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsNIdEncode class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsNIdEncode__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - apimomentsApiLogin

@implementation apimomentsApiLogin

@dynamic firstLogin;
@dynamic hasUserInfo, userInfo;

typedef struct apimomentsApiLogin__storage_ {
  uint32_t _has_storage_[1];
  apimomentsMomentsUserInfo *userInfo;
} apimomentsApiLogin__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "firstLogin",
        .dataTypeSpecific.clazz = Nil,
        .number = apimomentsApiLogin_FieldNumber_FirstLogin,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "userInfo",
        .dataTypeSpecific.clazz = GPBObjCClass(apimomentsMomentsUserInfo),
        .number = apimomentsApiLogin_FieldNumber_UserInfo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(apimomentsApiLogin__storage_, userInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[apimomentsApiLogin class]
                                     rootClass:[apimomentsMomentsRoot class]
                                          file:apimomentsMomentsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(apimomentsApiLogin__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\n\000\002\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
