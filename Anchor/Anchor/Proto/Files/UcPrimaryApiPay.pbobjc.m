// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uc-primary-api-pay.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "UcPrimaryApiPay.pbobjc.h"
#import "UcBasic.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(serviceucIdEncode);
GPBObjCClassDeclaration(serviceucPaymentAppleApiProductId);

#pragma mark - serviceucUcPrimaryApiPayRoot

@implementation serviceucUcPrimaryApiPayRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - serviceucUcPrimaryApiPayRoot_FileDescriptor

static GPBFileDescriptor *serviceucUcPrimaryApiPayRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"uc"
                                                 objcPrefix:@"serviceuc"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - serviceucPaymentLookupRequest

@implementation serviceucPaymentLookupRequest

@dynamic hasPrepayId, prepayId;

typedef struct serviceucPaymentLookupRequest__storage_ {
  uint32_t _has_storage_[1];
  serviceucIdEncode *prepayId;
} serviceucPaymentLookupRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucIdEncode),
        .number = serviceucPaymentLookupRequest_FieldNumber_PrepayId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentLookupRequest__storage_, prepayId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentLookupRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentLookupRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentLookupResponse

@implementation serviceucPaymentLookupResponse

@dynamic isSuccess;

typedef struct serviceucPaymentLookupResponse__storage_ {
  uint32_t _has_storage_[1];
} serviceucPaymentLookupResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isSuccess",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentLookupResponse_FieldNumber_IsSuccess,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentLookupResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentLookupResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleApiConfigRequest

@implementation serviceucPaymentAppleApiConfigRequest


typedef struct serviceucPaymentAppleApiConfigRequest__storage_ {
  uint32_t _has_storage_[1];
} serviceucPaymentAppleApiConfigRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleApiConfigRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(serviceucPaymentAppleApiConfigRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleApiConfigResponse

@implementation serviceucPaymentAppleApiConfigResponse

@dynamic productIdsArray, productIdsArray_Count;

typedef struct serviceucPaymentAppleApiConfigResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *productIdsArray;
} serviceucPaymentAppleApiConfigResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "productIdsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucPaymentAppleApiProductId),
        .number = serviceucPaymentAppleApiConfigResponse_FieldNumber_ProductIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleApiConfigResponse__storage_, productIdsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleApiConfigResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleApiConfigResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleApiProductId

@implementation serviceucPaymentAppleApiProductId

@dynamic productId;
@dynamic amount;

typedef struct serviceucPaymentAppleApiProductId__storage_ {
  uint32_t _has_storage_[1];
  uint32_t amount;
  NSString *productId;
} serviceucPaymentAppleApiProductId__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "productId",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleApiProductId_FieldNumber_ProductId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleApiProductId__storage_, productId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amount",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleApiProductId_FieldNumber_Amount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleApiProductId__storage_, amount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleApiProductId class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleApiProductId__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleCreatePrepayRequest

@implementation serviceucPaymentAppleCreatePrepayRequest

@dynamic productId;
@dynamic paymentArgs;

typedef struct serviceucPaymentAppleCreatePrepayRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *productId;
  NSString *paymentArgs;
} serviceucPaymentAppleCreatePrepayRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "productId",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleCreatePrepayRequest_FieldNumber_ProductId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleCreatePrepayRequest__storage_, productId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "paymentArgs",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleCreatePrepayRequest_FieldNumber_PaymentArgs,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleCreatePrepayRequest__storage_, paymentArgs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleCreatePrepayRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleCreatePrepayRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleCreatePrepayResponse

@implementation serviceucPaymentAppleCreatePrepayResponse

@dynamic hasPrepayId, prepayId;
@dynamic hasProductId, productId;

typedef struct serviceucPaymentAppleCreatePrepayResponse__storage_ {
  uint32_t _has_storage_[1];
  serviceucIdEncode *prepayId;
  serviceucPaymentAppleApiProductId *productId;
} serviceucPaymentAppleCreatePrepayResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucIdEncode),
        .number = serviceucPaymentAppleCreatePrepayResponse_FieldNumber_PrepayId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleCreatePrepayResponse__storage_, prepayId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "productId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucPaymentAppleApiProductId),
        .number = serviceucPaymentAppleCreatePrepayResponse_FieldNumber_ProductId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleCreatePrepayResponse__storage_, productId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleCreatePrepayResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleCreatePrepayResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleVerifyReceiptRequest

@implementation serviceucPaymentAppleVerifyReceiptRequest

@dynamic hasPrepayId, prepayId;
@dynamic transactionId;
@dynamic receipt;

typedef struct serviceucPaymentAppleVerifyReceiptRequest__storage_ {
  uint32_t _has_storage_[1];
  serviceucIdEncode *prepayId;
  NSString *transactionId;
  NSString *receipt;
} serviceucPaymentAppleVerifyReceiptRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucIdEncode),
        .number = serviceucPaymentAppleVerifyReceiptRequest_FieldNumber_PrepayId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleVerifyReceiptRequest__storage_, prepayId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "transactionId",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleVerifyReceiptRequest_FieldNumber_TransactionId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleVerifyReceiptRequest__storage_, transactionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "receipt",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleVerifyReceiptRequest_FieldNumber_Receipt,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceucPaymentAppleVerifyReceiptRequest__storage_, receipt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleVerifyReceiptRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleVerifyReceiptRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentAppleVerifyReceiptResponse

@implementation serviceucPaymentAppleVerifyReceiptResponse

@dynamic isTest;

typedef struct serviceucPaymentAppleVerifyReceiptResponse__storage_ {
  uint32_t _has_storage_[1];
} serviceucPaymentAppleVerifyReceiptResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isTest",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentAppleVerifyReceiptResponse_FieldNumber_IsTest,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentAppleVerifyReceiptResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentAppleVerifyReceiptResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentMyh5CreatePrepayRequest

@implementation serviceucPaymentMyh5CreatePrepayRequest

@dynamic paymentArgs;

typedef struct serviceucPaymentMyh5CreatePrepayRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *paymentArgs;
} serviceucPaymentMyh5CreatePrepayRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "paymentArgs",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentMyh5CreatePrepayRequest_FieldNumber_PaymentArgs,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentMyh5CreatePrepayRequest__storage_, paymentArgs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentMyh5CreatePrepayRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentMyh5CreatePrepayRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentMyh5CreatePrepayResponse

@implementation serviceucPaymentMyh5CreatePrepayResponse

@dynamic hasPrepayId, prepayId;
@dynamic h5RedirectURL;

typedef struct serviceucPaymentMyh5CreatePrepayResponse__storage_ {
  uint32_t _has_storage_[1];
  serviceucIdEncode *prepayId;
  NSString *h5RedirectURL;
} serviceucPaymentMyh5CreatePrepayResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucIdEncode),
        .number = serviceucPaymentMyh5CreatePrepayResponse_FieldNumber_PrepayId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentMyh5CreatePrepayResponse__storage_, prepayId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "h5RedirectURL",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentMyh5CreatePrepayResponse_FieldNumber_H5RedirectURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentMyh5CreatePrepayResponse__storage_, h5RedirectURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentMyh5CreatePrepayResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentMyh5CreatePrepayResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\013!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucListSupportTypeRequest

@implementation serviceucListSupportTypeRequest


typedef struct serviceucListSupportTypeRequest__storage_ {
  uint32_t _has_storage_[1];
} serviceucListSupportTypeRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucListSupportTypeRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(serviceucListSupportTypeRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucListSupportTypeResponse

@implementation serviceucListSupportTypeResponse

@dynamic payTypesArray, payTypesArray_Count;

typedef struct serviceucListSupportTypeResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *payTypesArray;
} serviceucListSupportTypeResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payTypesArray",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucListSupportTypeResponse_FieldNumber_PayTypesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(serviceucListSupportTypeResponse__storage_, payTypesArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucListSupportTypeResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucListSupportTypeResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\000payTypes\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentDirectorCreatePrepayRequest

@implementation serviceucPaymentDirectorCreatePrepayRequest

@dynamic paymentArgs;

typedef struct serviceucPaymentDirectorCreatePrepayRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *paymentArgs;
} serviceucPaymentDirectorCreatePrepayRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "paymentArgs",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentDirectorCreatePrepayRequest_FieldNumber_PaymentArgs,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentDirectorCreatePrepayRequest__storage_, paymentArgs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentDirectorCreatePrepayRequest class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentDirectorCreatePrepayRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceucPaymentDirectorCreatePrepayResponse

@implementation serviceucPaymentDirectorCreatePrepayResponse

@dynamic hasPrepayId, prepayId;
@dynamic redirectURL;

typedef struct serviceucPaymentDirectorCreatePrepayResponse__storage_ {
  uint32_t _has_storage_[1];
  serviceucIdEncode *prepayId;
  NSString *redirectURL;
} serviceucPaymentDirectorCreatePrepayResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayId",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceucIdEncode),
        .number = serviceucPaymentDirectorCreatePrepayResponse_FieldNumber_PrepayId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceucPaymentDirectorCreatePrepayResponse__storage_, prepayId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "redirectURL",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceucPaymentDirectorCreatePrepayResponse_FieldNumber_RedirectURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceucPaymentDirectorCreatePrepayResponse__storage_, redirectURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceucPaymentDirectorCreatePrepayResponse class]
                                     rootClass:[serviceucUcPrimaryApiPayRoot class]
                                          file:serviceucUcPrimaryApiPayRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceucPaymentDirectorCreatePrepayResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\t!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
