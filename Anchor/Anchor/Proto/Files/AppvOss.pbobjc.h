// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appv-oss.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class appvapiIdEncode;
@class appvapiOssCallback;
@class appvapiOssCertificateEvent;
@class appvapiOssToken;
@class appvapiOssUploadCallback_Event;
@class appvapiUploadEvent;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum appvapiBucketType

/**
 * 上传文件的类型
 * 根据这个类型分配桶
 **/
typedef GPB_ENUM(appvapiBucketType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  appvapiBucketType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  appvapiBucketType_BucketTypeUnspecified = 0,

  /** 普通视频桶 */
  appvapiBucketType_BucketTypeVideoNormal = 1,

  /** 普通图片桶 */
  appvapiBucketType_BucketTypeImageNormal = 2,

  /** 用户头像桶 */
  appvapiBucketType_BucketTypeAvatar = 3,

  /** 标签图片桶 */
  appvapiBucketType_BucketTypeImageTag = 4,

  /** m3u8视频桶 */
  appvapiBucketType_BucketTypeShard = 5,
};

GPBEnumDescriptor *appvapiBucketType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL appvapiBucketType_IsValidValue(int32_t value);

#pragma mark - Enum appvapiOssUploadCallback_OssUploadStatus

/**
 * 上传文件的状态
 * 如果要修改时，需要去同步 enum OssUploadStatusEnum
 **/
typedef GPB_ENUM(appvapiOssUploadCallback_OssUploadStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  appvapiOssUploadCallback_OssUploadStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusUnspecified = 0,

  /** 上传中。上传后等待结果通知 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusUploading = 1,

  /** 上传取消 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusCancel = 2,

  /** 同步完成。成功获取到客户端的通知结果。 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusClientSyncSuccess = 3,

  /** 同步完成。成功获取到云服务的通知结果。 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusServerSyncSuccess = 4,

  /** 同步失败。云服务出现问题同步出现超时等情况。 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusSyncTimeout = 5,

  /** 同步失败。客户端上传网络异常。 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusClientNetworkError = 6,

  /** 同步失败。客户端上传CRC校验失败。 */
  appvapiOssUploadCallback_OssUploadStatus_OssUploadStatusClientCrcFailure = 7,
};

GPBEnumDescriptor *appvapiOssUploadCallback_OssUploadStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL appvapiOssUploadCallback_OssUploadStatus_IsValidValue(int32_t value);

#pragma mark - appvapiAppvOssRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface appvapiAppvOssRoot : GPBRootObject
@end

#pragma mark - appvapiOssCallback

typedef GPB_ENUM(appvapiOssCallback_FieldNumber) {
  appvapiOssCallback_FieldNumber_CallbackURL = 1,
  appvapiOssCallback_FieldNumber_CallbackHost = 2,
  appvapiOssCallback_FieldNumber_CallbackBody = 3,
  appvapiOssCallback_FieldNumber_CallbackBodyType = 4,
};

/**
 * 上传时给oss服务器的回调信息
 **/
GPB_FINAL @interface appvapiOssCallback : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *callbackURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *callbackHost;

@property(nonatomic, readwrite, copy, null_resettable) NSString *callbackBody;

@property(nonatomic, readwrite, copy, null_resettable) NSString *callbackBodyType;

@end

#pragma mark - appvapiOssAuthEvent

typedef GPB_ENUM(appvapiOssAuthEvent_FieldNumber) {
  appvapiOssAuthEvent_FieldNumber_AuthURL = 1,
  appvapiOssAuthEvent_FieldNumber_Callback = 2,
};

/**
 * 预签名形式的返回
 **/
GPB_FINAL @interface appvapiOssAuthEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *authURL;

@property(nonatomic, readwrite, strong, null_resettable) appvapiOssCallback *callback;
/** Test to see if @c callback has been set. */
@property(nonatomic, readwrite) BOOL hasCallback;

@end

#pragma mark - appvapiOssCertificateEvent

typedef GPB_ENUM(appvapiOssCertificateEvent_FieldNumber) {
  appvapiOssCertificateEvent_FieldNumber_EventId = 1,
  appvapiOssCertificateEvent_FieldNumber_BucketName = 2,
  appvapiOssCertificateEvent_FieldNumber_ObjectName = 3,
  appvapiOssCertificateEvent_FieldNumber_ObjectOriginalName = 4,
  appvapiOssCertificateEvent_FieldNumber_Callback = 5,
};

/**
 * 凭证上传形式的返回
 **/
GPB_FINAL @interface appvapiOssCertificateEvent : GPBMessage

/** 本资源的上传事件的id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *eventId;
/** Test to see if @c eventId has been set. */
@property(nonatomic, readwrite) BOOL hasEventId;

/** 上传对象的桶信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bucketName;

/** 上传对象的信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectName;

/** 上传对象的原始名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectOriginalName;

/**
 * 告诉第三方的回调地址
 * 如果是空的就不管
 **/
@property(nonatomic, readwrite, strong, null_resettable) appvapiOssCallback *callback;
/** Test to see if @c callback has been set. */
@property(nonatomic, readwrite) BOOL hasCallback;

@end

#pragma mark - appvapiOssToken

typedef GPB_ENUM(appvapiOssToken_FieldNumber) {
  appvapiOssToken_FieldNumber_AccessKey = 1,
  appvapiOssToken_FieldNumber_SecretKey = 2,
  appvapiOssToken_FieldNumber_SessionToken = 3,
  appvapiOssToken_FieldNumber_Expiration = 4,
};

/**
 * Oss token信息
 **/
GPB_FINAL @interface appvapiOssToken : GPBMessage

/** 临时-access-key */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessKey;

/** 临时-secret-key */
@property(nonatomic, readwrite, copy, null_resettable) NSString *secretKey;

/** 临时会话token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionToken;

/** 会话过期的时间点（毫秒时间戳） */
@property(nonatomic, readwrite) uint64_t expiration;

@end

#pragma mark - appvapiOssEvents

typedef GPB_ENUM(appvapiOssEvents_FieldNumber) {
  appvapiOssEvents_FieldNumber_OssToken = 1,
  appvapiOssEvents_FieldNumber_BatchId = 2,
  appvapiOssEvents_FieldNumber_FileEventsArray = 3,
};

GPB_FINAL @interface appvapiOssEvents : GPBMessage

/** 上传需要的临时认证信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiOssToken *ossToken;
/** Test to see if @c ossToken has been set. */
@property(nonatomic, readwrite) BOOL hasOssToken;

/** 本次上传的批次 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *batchId;
/** Test to see if @c batchId has been set. */
@property(nonatomic, readwrite) BOOL hasBatchId;

/** 文件上传事件集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiOssCertificateEvent*> *fileEventsArray;
/** The number of items in @c fileEventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fileEventsArray_Count;

@end

#pragma mark - appvapiUploadObject

typedef GPB_ENUM(appvapiUploadObject_FieldNumber) {
  appvapiUploadObject_FieldNumber_ObjectName = 1,
  appvapiUploadObject_FieldNumber_BucketType = 2,
  appvapiUploadObject_FieldNumber_ExtInfo = 3,
  appvapiUploadObject_FieldNumber_PathUnique = 4,
  appvapiUploadObject_FieldNumber_ObjectPrefix = 5,
};

/**
 * 要上传的对象
 **/
GPB_FINAL @interface appvapiUploadObject : GPBMessage

/** 对象名，需要包含扩展名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectName;

/** 文件要分配到的桶 */
@property(nonatomic, readwrite) appvapiBucketType bucketType;

/** 上传对象的扩展-JSON（回调时会原封不动的传递回来） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extInfo;

/** 文件所在的路径是否唯一。文件唯一且路径不唯一则会重命名文件；路径唯一则不会重命名文件 */
@property(nonatomic, readwrite) BOOL pathUnique;

/** src前缀 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectPrefix;

@end

/**
 * Fetches the raw value of a @c appvapiUploadObject's @c bucketType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t appvapiUploadObject_BucketType_RawValue(appvapiUploadObject *message);
/**
 * Sets the raw value of an @c appvapiUploadObject's @c bucketType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetappvapiUploadObject_BucketType_RawValue(appvapiUploadObject *message, int32_t value);

#pragma mark - appvapiUploadResult

typedef GPB_ENUM(appvapiUploadResult_FieldNumber) {
  appvapiUploadResult_FieldNumber_BatchId = 1,
  appvapiUploadResult_FieldNumber_OssToken = 2,
  appvapiUploadResult_FieldNumber_EventsArray = 3,
};

/**
 * 上传事件的结果
 **/
GPB_FINAL @interface appvapiUploadResult : GPBMessage

/** 批次id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *batchId;
/** Test to see if @c batchId has been set. */
@property(nonatomic, readwrite) BOOL hasBatchId;

/** Oss信息 */
@property(nonatomic, readwrite, strong, null_resettable) appvapiOssToken *ossToken;
/** Test to see if @c ossToken has been set. */
@property(nonatomic, readwrite) BOOL hasOssToken;

/** 上传的事件列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiUploadEvent*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@end

#pragma mark - appvapiUploadEvent

typedef GPB_ENUM(appvapiUploadEvent_FieldNumber) {
  appvapiUploadEvent_FieldNumber_EventId = 1,
  appvapiUploadEvent_FieldNumber_BucketName = 2,
  appvapiUploadEvent_FieldNumber_ObjectName = 3,
  appvapiUploadEvent_FieldNumber_UploadURL = 4,
};

/**
 * 上传的事件信息
 **/
GPB_FINAL @interface appvapiUploadEvent : GPBMessage

/** 上传事件id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *eventId;
/** Test to see if @c eventId has been set. */
@property(nonatomic, readwrite) BOOL hasEventId;

/** 上传对象的桶信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bucketName;

/** 上传对象名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectName;

/** 预签名方式的上传url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uploadURL;

@end

#pragma mark - appvapiOssUploadCallback

typedef GPB_ENUM(appvapiOssUploadCallback_FieldNumber) {
  appvapiOssUploadCallback_FieldNumber_BatchId = 1,
  appvapiOssUploadCallback_FieldNumber_PassParam = 2,
  appvapiOssUploadCallback_FieldNumber_EventsArray = 3,
  appvapiOssUploadCallback_FieldNumber_BatchStatus = 4,
};

/**
 * Oss回调服务
 **/
GPB_FINAL @interface appvapiOssUploadCallback : GPBMessage

/** 批次id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *batchId;
/** Test to see if @c batchId has been set. */
@property(nonatomic, readwrite) BOOL hasBatchId;

/** 透传参数 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *passParam;

/** 本批次内上传任务状态 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<appvapiOssUploadCallback_Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

/** 本批次的上传状态 */
@property(nonatomic, readwrite) appvapiOssUploadCallback_OssUploadStatus batchStatus;

@end

/**
 * Fetches the raw value of a @c appvapiOssUploadCallback's @c batchStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t appvapiOssUploadCallback_BatchStatus_RawValue(appvapiOssUploadCallback *message);
/**
 * Sets the raw value of an @c appvapiOssUploadCallback's @c batchStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetappvapiOssUploadCallback_BatchStatus_RawValue(appvapiOssUploadCallback *message, int32_t value);

#pragma mark - appvapiOssUploadCallback_Event

typedef GPB_ENUM(appvapiOssUploadCallback_Event_FieldNumber) {
  appvapiOssUploadCallback_Event_FieldNumber_ObjectId = 1,
  appvapiOssUploadCallback_Event_FieldNumber_Path = 2,
  appvapiOssUploadCallback_Event_FieldNumber_OssUploadStatus = 3,
  appvapiOssUploadCallback_Event_FieldNumber_ExtInfo = 4,
};

/**
 * 回调信息的事件
 **/
GPB_FINAL @interface appvapiOssUploadCallback_Event : GPBMessage

/** 上传对象的id */
@property(nonatomic, readwrite, strong, null_resettable) appvapiIdEncode *objectId;
/** Test to see if @c objectId has been set. */
@property(nonatomic, readwrite) BOOL hasObjectId;

/** 上传对象的全路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *path;

/** 上传文件的状态 */
@property(nonatomic, readwrite) appvapiOssUploadCallback_OssUploadStatus ossUploadStatus;

/** 上传对象的扩展-JSON（回调时会原封不动的传递回来） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extInfo;

@end

/**
 * Fetches the raw value of a @c appvapiOssUploadCallback_Event's @c ossUploadStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t appvapiOssUploadCallback_Event_OssUploadStatus_RawValue(appvapiOssUploadCallback_Event *message);
/**
 * Sets the raw value of an @c appvapiOssUploadCallback_Event's @c ossUploadStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetappvapiOssUploadCallback_Event_OssUploadStatus_RawValue(appvapiOssUploadCallback_Event *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
