// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange-primary-api-group.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class serviceexchangeChatGroupListInfo;
@class serviceexchangeChatUser;
@class serviceexchangeMessageContent;
@class serviceexchangeVersionId;
@class utilidentitysdkIdEncode;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum serviceexchangeChatGroupStatus

/** 客户端需要对聊天组（会话）操作的状态 */
typedef GPB_ENUM(serviceexchangeChatGroupStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  serviceexchangeChatGroupStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未知类型 */
  serviceexchangeChatGroupStatus_ChatGroupStatusUnspecified = 0,

  /** 更新会话数据 */
  serviceexchangeChatGroupStatus_ChatGroupStatusUpdate = 1,

  /** 删除会话数据 */
  serviceexchangeChatGroupStatus_ChatGroupStatusDel = 2,
};

GPBEnumDescriptor *serviceexchangeChatGroupStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL serviceexchangeChatGroupStatus_IsValidValue(int32_t value);

#pragma mark - serviceexchangeExchangePrimaryApiGroupRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface serviceexchangeExchangePrimaryApiGroupRoot : GPBRootObject
@end

#pragma mark - serviceexchangeListChatGroupRequest

typedef GPB_ENUM(serviceexchangeListChatGroupRequest_FieldNumber) {
  serviceexchangeListChatGroupRequest_FieldNumber_LastId = 1,
  serviceexchangeListChatGroupRequest_FieldNumber_GroupVersionId = 2,
};

/**
 * 拉取私信组列表接口请求参数
 **/
GPB_FINAL @interface serviceexchangeListChatGroupRequest : GPBMessage

/** 分页时使用的上页最后一条记录的会话id（group_id），第一页不传。后续可以一直使用整个列表的最后一条数据id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *lastId;
/** Test to see if @c lastId has been set. */
@property(nonatomic, readwrite) BOOL hasLastId;

/**
 * 当前客户端内会话列表中的最大会话版本id（group的version_id）。
 * 在分页查询时，该参数必须保证查询首页的参数一致！！
 **/
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *groupVersionId;
/** Test to see if @c groupVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupVersionId;

@end

#pragma mark - serviceexchangeListChatGroupResponse

typedef GPB_ENUM(serviceexchangeListChatGroupResponse_FieldNumber) {
  serviceexchangeListChatGroupResponse_FieldNumber_GroupInfosArray = 1,
  serviceexchangeListChatGroupResponse_FieldNumber_HasNext = 2,
};

/**
 * 拉取私信组列表接口响应参数
 **/
GPB_FINAL @interface serviceexchangeListChatGroupResponse : GPBMessage

/** 增量变动的会话列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeChatGroupListInfo*> *groupInfosArray;
/** The number of items in @c groupInfosArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupInfosArray_Count;

/** 是否包含下一页 */
@property(nonatomic, readwrite) BOOL hasNext;

@end

#pragma mark - serviceexchangeReadMsgRequest

typedef GPB_ENUM(serviceexchangeReadMsgRequest_FieldNumber) {
  serviceexchangeReadMsgRequest_FieldNumber_GroupId = 1,
  serviceexchangeReadMsgRequest_FieldNumber_MsgVersionId = 2,
};

/**
 * 聊天组（会话）用户已读记录发送接口请求参数
 **/
GPB_FINAL @interface serviceexchangeReadMsgRequest : GPBMessage

/** 聊天组（会话）id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/**
 * 当前聊天组（会话）内的最新（大）消息id
 * 标记已读后，更多的消息接口就不会返回已读之前的消息了
 **/
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *msgVersionId;
/** Test to see if @c msgVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasMsgVersionId;

@end

#pragma mark - serviceexchangeReadMsgResponse

typedef GPB_ENUM(serviceexchangeReadMsgResponse_FieldNumber) {
  serviceexchangeReadMsgResponse_FieldNumber_LastMsgVersionId = 1,
};

/**
 * 聊天组（会话）用户已读记录发送接口响应参数
 **/
GPB_FINAL @interface serviceexchangeReadMsgResponse : GPBMessage

/** 当前用户的最后读取的消息版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *lastMsgVersionId;
/** Test to see if @c lastMsgVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasLastMsgVersionId;

@end

#pragma mark - serviceexchangeChatGroupListInfo

typedef GPB_ENUM(serviceexchangeChatGroupListInfo_FieldNumber) {
  serviceexchangeChatGroupListInfo_FieldNumber_GroupId = 1,
  serviceexchangeChatGroupListInfo_FieldNumber_VersionId = 2,
  serviceexchangeChatGroupListInfo_FieldNumber_GroupStatus = 3,
  serviceexchangeChatGroupListInfo_FieldNumber_UnreadMsgCount = 4,
  serviceexchangeChatGroupListInfo_FieldNumber_LastMsgVersionId = 5,
  serviceexchangeChatGroupListInfo_FieldNumber_OnTop = 6,
  serviceexchangeChatGroupListInfo_FieldNumber_UsersArray = 7,
  serviceexchangeChatGroupListInfo_FieldNumber_LastMessageContentsArray = 8,
  serviceexchangeChatGroupListInfo_FieldNumber_MoreUnreadMsg = 9,
};

/**
 * 聊天组（会话）信息
 * 这里应该是优先 置顶排序，然后是聊天组（会话）的版本id排序
 **/
GPB_FINAL @interface serviceexchangeChatGroupListInfo : GPBMessage

/** 聊天组（会话）id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 聊天组（会话）版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *versionId;
/** Test to see if @c versionId has been set. */
@property(nonatomic, readwrite) BOOL hasVersionId;

/** 聊天组（会话）状态，是更新客户端会话数据，还是需要客户端删除会话数据 */
@property(nonatomic, readwrite) serviceexchangeChatGroupStatus groupStatus;

/** 聊天组（会话）未读消息个数 */
@property(nonatomic, readwrite) uint32_t unreadMsgCount;

/** 聊天组（会话）最后已读取的消息版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *lastMsgVersionId;
/** Test to see if @c lastMsgVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasLastMsgVersionId;

/** 聊天组（会话）是否置顶 */
@property(nonatomic, readwrite) BOOL onTop;

/** 聊天组（会话）内用户列表（目前是返回全部用户数据，后续如果设计几百上千群聊时，可以增加一个聊天组的用户列表） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeChatUser*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

/**
 * 聊天组（会话）最近聊天消息。至多返回最近10条。如果用户已读后最新消息后再次调用则不会返回旧的消息数据了
 * 如果请求时参数传递会话的版本Id，那么则只会返回指定会话版本之后的数据了（没有新数据则不返回）；否则返回最新的10条记录
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeMessageContent*> *lastMessageContentsArray;
/** The number of items in @c lastMessageContentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lastMessageContentsArray_Count;

/** 除了上述返回的信息之外，未读消息之后是否可能存在新的消息 */
@property(nonatomic, readwrite) BOOL moreUnreadMsg;

@end

/**
 * Fetches the raw value of a @c serviceexchangeChatGroupListInfo's @c groupStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeChatGroupListInfo_GroupStatus_RawValue(serviceexchangeChatGroupListInfo *message);
/**
 * Sets the raw value of an @c serviceexchangeChatGroupListInfo's @c groupStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeChatGroupListInfo_GroupStatus_RawValue(serviceexchangeChatGroupListInfo *message, int32_t value);

#pragma mark - serviceexchangeRemoveGroupRequest

typedef GPB_ENUM(serviceexchangeRemoveGroupRequest_FieldNumber) {
  serviceexchangeRemoveGroupRequest_FieldNumber_GroupId = 1,
  serviceexchangeRemoveGroupRequest_FieldNumber_GroupVersionId = 2,
};

/**
 * 删除聊天组（会话）接口请求接口
 **/
GPB_FINAL @interface serviceexchangeRemoveGroupRequest : GPBMessage

/** 聊天组（会话）id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 客户端本地最新的聊天组（会话）的版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *groupVersionId;
/** Test to see if @c groupVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupVersionId;

@end

#pragma mark - serviceexchangeRemoveGroupResponse

/**
 * 删除聊天组（会话）接口响应接口
 **/
GPB_FINAL @interface serviceexchangeRemoveGroupResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
