// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange-primary-api-chat.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class serviceexchangeMessageContent;
@class serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime;
@class serviceexchangeSendMsgBasicInfo;
@class serviceexchangeSendTextMsgRequest_SendMsgBodyUserText;
@class serviceexchangeVersionId;
@class utilidentitysdkIdEncode;
GPB_ENUM_FWD_DECLARE(serviceexchangeMimeType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - serviceexchangeExchangePrimaryApiChatRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface serviceexchangeExchangePrimaryApiChatRoot : GPBRootObject
@end

#pragma mark - serviceexchangeSendTextMsgRequest

typedef GPB_ENUM(serviceexchangeSendTextMsgRequest_FieldNumber) {
  serviceexchangeSendTextMsgRequest_FieldNumber_Uid = 1,
  serviceexchangeSendTextMsgRequest_FieldNumber_MsgBody = 2,
  serviceexchangeSendTextMsgRequest_FieldNumber_ClientSendTime = 3,
  serviceexchangeSendTextMsgRequest_FieldNumber_RefMsgVersionId = 4,
};

/**
 * 发送消息的请求参数
 **/
GPB_FINAL @interface serviceexchangeSendTextMsgRequest : GPBMessage

/** 聊天对象的uid。必传 */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *uid;
/** Test to see if @c uid has been set. */
@property(nonatomic, readwrite) BOOL hasUid;

/** 发送的用户文本消息体。必传 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeSendTextMsgRequest_SendMsgBodyUserText *msgBody;
/** Test to see if @c msgBody has been set. */
@property(nonatomic, readwrite) BOOL hasMsgBody;

/** 客户端的发送时间。必传 */
@property(nonatomic, readwrite) uint64_t clientSendTime;

/** 回复消息的id。没有则不传递 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *refMsgVersionId;
/** Test to see if @c refMsgVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasRefMsgVersionId;

@end

#pragma mark - serviceexchangeSendTextMsgRequest_SendMsgBodyUserText

typedef GPB_ENUM(serviceexchangeSendTextMsgRequest_SendMsgBodyUserText_FieldNumber) {
  serviceexchangeSendTextMsgRequest_SendMsgBodyUserText_FieldNumber_Content = 1,
  serviceexchangeSendTextMsgRequest_SendMsgBodyUserText_FieldNumber_RefUidsArray = 2,
};

/**
 * 用户发送的文本消息体
 **/
GPB_FINAL @interface serviceexchangeSendTextMsgRequest_SendMsgBodyUserText : GPBMessage

/** 带占位符的文本消息。必传 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 对应站位符的\@引用用户的列表 [uid, ....]，没有则不传递 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<utilidentitysdkIdEncode*> *refUidsArray;
/** The number of items in @c refUidsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger refUidsArray_Count;

@end

#pragma mark - serviceexchangeSendTextMsgResponse

typedef GPB_ENUM(serviceexchangeSendTextMsgResponse_FieldNumber) {
  serviceexchangeSendTextMsgResponse_FieldNumber_SendMsgBasicInfo = 1,
};

/**
 * 发送消息的响应参数
 **/
GPB_FINAL @interface serviceexchangeSendTextMsgResponse : GPBMessage

/** 返回处理后的消息信息（不包含内容） */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeSendMsgBasicInfo *sendMsgBasicInfo;
/** Test to see if @c sendMsgBasicInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSendMsgBasicInfo;

@end

#pragma mark - serviceexchangeSendMimeMsgRequest

typedef GPB_ENUM(serviceexchangeSendMimeMsgRequest_FieldNumber) {
  serviceexchangeSendMimeMsgRequest_FieldNumber_Uid = 1,
  serviceexchangeSendMimeMsgRequest_FieldNumber_MsgBody = 2,
  serviceexchangeSendMimeMsgRequest_FieldNumber_ClientSendTime = 3,
};

/**
 * 发送消息的请求参数
 **/
GPB_FINAL @interface serviceexchangeSendMimeMsgRequest : GPBMessage

/** 聊天对象的uid。必传 */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *uid;
/** Test to see if @c uid has been set. */
@property(nonatomic, readwrite) BOOL hasUid;

/** 发送的用户媒体资源消息体。必传 */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime *msgBody;
/** Test to see if @c msgBody has been set. */
@property(nonatomic, readwrite) BOOL hasMsgBody;

/** 客户端的发送时间。必传 */
@property(nonatomic, readwrite) uint64_t clientSendTime;

@end

#pragma mark - serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime

typedef GPB_ENUM(serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime_FieldNumber) {
  serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime_FieldNumber_URL = 1,
  serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime_FieldNumber_MimeType = 2,
};

/**
 * 用户媒体资源消息体
 **/
GPB_FINAL @interface serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime : GPBMessage

/** 媒体资源的地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 媒体文件的类型 */
@property(nonatomic, readwrite) enum serviceexchangeMimeType mimeType;

@end

/**
 * Fetches the raw value of a @c serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime's @c mimeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime_MimeType_RawValue(serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime *message);
/**
 * Sets the raw value of an @c serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime's @c mimeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetserviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime_MimeType_RawValue(serviceexchangeSendMimeMsgRequest_SendMsgBodyUserMime *message, int32_t value);

#pragma mark - serviceexchangeSendMimeMsgResponse

typedef GPB_ENUM(serviceexchangeSendMimeMsgResponse_FieldNumber) {
  serviceexchangeSendMimeMsgResponse_FieldNumber_SendMsgBasicInfo = 1,
};

/**
 * 发送消息的响应参数
 **/
GPB_FINAL @interface serviceexchangeSendMimeMsgResponse : GPBMessage

/** 返回处理后的消息信息（不包含内容） */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeSendMsgBasicInfo *sendMsgBasicInfo;
/** Test to see if @c sendMsgBasicInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSendMsgBasicInfo;

@end

#pragma mark - serviceexchangeAckMsgRequest

typedef GPB_ENUM(serviceexchangeAckMsgRequest_FieldNumber) {
  serviceexchangeAckMsgRequest_FieldNumber_VersionId = 1,
  serviceexchangeAckMsgRequest_FieldNumber_EventName = 2,
};

/**
 * ack接口请求参数
 **/
GPB_FINAL @interface serviceexchangeAckMsgRequest : GPBMessage

/** 推送的事件版本id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *versionId;
/** Test to see if @c versionId has been set. */
@property(nonatomic, readwrite) BOOL hasVersionId;

/** 推送的事件名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *eventName;

@end

#pragma mark - serviceexchangeAckMsgResponse

/**
 * ack接口响应参数参数
 **/
GPB_FINAL @interface serviceexchangeAckMsgResponse : GPBMessage

@end

#pragma mark - serviceexchangeMoreMsgRequest

typedef GPB_ENUM(serviceexchangeMoreMsgRequest_FieldNumber) {
  serviceexchangeMoreMsgRequest_FieldNumber_GroupId = 1,
  serviceexchangeMoreMsgRequest_FieldNumber_LastVersionId = 2,
  serviceexchangeMoreMsgRequest_FieldNumber_MsgVersionId = 3,
};

/**
 * 获取聊天组（会话）（会话）中更多信息接口请求参数
 **/
GPB_FINAL @interface serviceexchangeMoreMsgRequest : GPBMessage

/** 聊天组（会话）的id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 分页查询时使用的msg_version_id。第一次不传，后续需要传递上一次消息列表的最后一条消息id */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *lastVersionId;
/** Test to see if @c lastVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasLastVersionId;

/**
 * 分页时传递的要和首次请求传递的值相同。
 * 新消息更多：这里传客户端本地的最新消息版本id，则服务端会将最新消息版本id之后的信息分页返回给客户端
 * 历史消息更多：这里传0，则服务端会将全部信息分页返回给客户端（直到已读或者已删为止）客户端本地的最新消息版本id
 **/
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *msgVersionId;
/** Test to see if @c msgVersionId has been set. */
@property(nonatomic, readwrite) BOOL hasMsgVersionId;

@end

#pragma mark - serviceexchangeMoreMsgResponse

typedef GPB_ENUM(serviceexchangeMoreMsgResponse_FieldNumber) {
  serviceexchangeMoreMsgResponse_FieldNumber_MessageContentsArray = 1,
  serviceexchangeMoreMsgResponse_FieldNumber_HasNext = 2,
};

/**
 * 获取聊天组（会话）中更多信息接口响应参数
 **/
GPB_FINAL @interface serviceexchangeMoreMsgResponse : GPBMessage

/** 消息的列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<serviceexchangeMessageContent*> *messageContentsArray;
/** The number of items in @c messageContentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageContentsArray_Count;

/** 是否包含下一页 */
@property(nonatomic, readwrite) BOOL hasNext;

@end

#pragma mark - serviceexchangeSendMsgBasicInfo

typedef GPB_ENUM(serviceexchangeSendMsgBasicInfo_FieldNumber) {
  serviceexchangeSendMsgBasicInfo_FieldNumber_VersionId = 1,
  serviceexchangeSendMsgBasicInfo_FieldNumber_SendTime = 2,
  serviceexchangeSendMsgBasicInfo_FieldNumber_GroupId = 3,
};

/**
 * 消息的基本信息
 **/
GPB_FINAL @interface serviceexchangeSendMsgBasicInfo : GPBMessage

/** 消息版本id（保证有序递增） */
@property(nonatomic, readwrite, strong, null_resettable) serviceexchangeVersionId *versionId;
/** Test to see if @c versionId has been set. */
@property(nonatomic, readwrite) BOOL hasVersionId;

/** 发送时间（服务器收到的时间） */
@property(nonatomic, readwrite) uint64_t sendTime;

/** 聊天组（会话）id */
@property(nonatomic, readwrite, strong, null_resettable) utilidentitysdkIdEncode *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
