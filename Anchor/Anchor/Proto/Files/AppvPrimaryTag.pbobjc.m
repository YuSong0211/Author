// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appv-primary-tag.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "AppvPrimaryTag.pbobjc.h"
#import "AppvBasic.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(appvapiIdEncode);
GPBObjCClassDeclaration(appvapiMIMEInfo);

#pragma mark - appvapiAppvPrimaryTagRoot

@implementation appvapiAppvPrimaryTagRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - appvapiAppvPrimaryTagRoot_FileDescriptor

static GPBFileDescriptor *appvapiAppvPrimaryTagRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"appvapi"
                                                 objcPrefix:@"appvapi"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum appvapiContentTagType

GPBEnumDescriptor *appvapiContentTagType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ContentTagTypeUnspecified\000ContentTagType"
        "Video\000ContentTagTypePost\000ContentTagTypeL"
        "ive\000";
    static const int32_t values[] = {
        appvapiContentTagType_ContentTagTypeUnspecified,
        appvapiContentTagType_ContentTagTypeVideo,
        appvapiContentTagType_ContentTagTypePost,
        appvapiContentTagType_ContentTagTypeLive,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(appvapiContentTagType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:appvapiContentTagType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      
    }
  }
  return descriptor;
}

BOOL appvapiContentTagType_IsValidValue(int32_t value__) {
  switch (value__) {
    case appvapiContentTagType_ContentTagTypeUnspecified:
    case appvapiContentTagType_ContentTagTypeVideo:
    case appvapiContentTagType_ContentTagTypePost:
    case appvapiContentTagType_ContentTagTypeLive:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - appvapiContentTag

@implementation appvapiContentTag

@dynamic hasId_p, id_p;
@dynamic tagName;
@dynamic hasBackgroundImgURL, backgroundImgURL;
@dynamic hasBackground;
@dynamic isMain;
@dynamic contentTagType;
@dynamic isHot;

typedef struct appvapiContentTag__storage_ {
  uint32_t _has_storage_[1];
  appvapiContentTagType contentTagType;
  appvapiIdEncode *id_p;
  NSString *tagName;
  appvapiMIMEInfo *backgroundImgURL;
} appvapiContentTag__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = GPBObjCClass(appvapiIdEncode),
        .number = appvapiContentTag_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(appvapiContentTag__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tagName",
        .dataTypeSpecific.clazz = Nil,
        .number = appvapiContentTag_FieldNumber_TagName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(appvapiContentTag__storage_, tagName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "backgroundImgURL",
        .dataTypeSpecific.clazz = GPBObjCClass(appvapiMIMEInfo),
        .number = appvapiContentTag_FieldNumber_BackgroundImgURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(appvapiContentTag__storage_, backgroundImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hasBackground",
        .dataTypeSpecific.clazz = Nil,
        .number = appvapiContentTag_FieldNumber_HasBackground,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isMain",
        .dataTypeSpecific.clazz = Nil,
        .number = appvapiContentTag_FieldNumber_IsMain,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "contentTagType",
        .dataTypeSpecific.enumDescFunc = appvapiContentTagType_EnumDescriptor,
        .number = appvapiContentTag_FieldNumber_ContentTagType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(appvapiContentTag__storage_, contentTagType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isHot",
        .dataTypeSpecific.clazz = Nil,
        .number = appvapiContentTag_FieldNumber_IsHot,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[appvapiContentTag class]
                                     rootClass:[appvapiAppvPrimaryTagRoot class]
                                          file:appvapiAppvPrimaryTagRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(appvapiContentTag__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\n\243\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t appvapiContentTag_ContentTagType_RawValue(appvapiContentTag *message) {
  GPBDescriptor *descriptor = [appvapiContentTag descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:appvapiContentTag_FieldNumber_ContentTagType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetappvapiContentTag_ContentTagType_RawValue(appvapiContentTag *message, int32_t value) {
  GPBDescriptor *descriptor = [appvapiContentTag descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:appvapiContentTag_FieldNumber_ContentTagType];
  GPBSetMessageRawEnumField(message, field, value);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
