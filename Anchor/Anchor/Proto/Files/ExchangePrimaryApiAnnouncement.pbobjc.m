// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange-primary-api-announcement.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "ExchangePrimaryApiAnnouncement.pbobjc.h"
#import "UtilBasicIdentity.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(serviceexchangeAnnouncementMsg);
GPBObjCClassDeclaration(utilidentitysdkIdEncode);

#pragma mark - serviceexchangeExchangePrimaryApiAnnouncementRoot

@implementation serviceexchangeExchangePrimaryApiAnnouncementRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - serviceexchangeExchangePrimaryApiAnnouncementRoot_FileDescriptor

static GPBFileDescriptor *serviceexchangeExchangePrimaryApiAnnouncementRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"exchange"
                                                 objcPrefix:@"serviceexchange"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - serviceexchangeListAnnouncementRequest

@implementation serviceexchangeListAnnouncementRequest

@dynamic hasLastMsgId, lastMsgId;

typedef struct serviceexchangeListAnnouncementRequest__storage_ {
  uint32_t _has_storage_[1];
  utilidentitysdkIdEncode *lastMsgId;
} serviceexchangeListAnnouncementRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastMsgId",
        .dataTypeSpecific.clazz = GPBObjCClass(utilidentitysdkIdEncode),
        .number = serviceexchangeListAnnouncementRequest_FieldNumber_LastMsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceexchangeListAnnouncementRequest__storage_, lastMsgId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceexchangeListAnnouncementRequest class]
                                     rootClass:[serviceexchangeExchangePrimaryApiAnnouncementRoot class]
                                          file:serviceexchangeExchangePrimaryApiAnnouncementRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceexchangeListAnnouncementRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceexchangeListAnnouncementResponse

@implementation serviceexchangeListAnnouncementResponse

@dynamic announcementMsgsArray, announcementMsgsArray_Count;
@dynamic hasNext;

typedef struct serviceexchangeListAnnouncementResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *announcementMsgsArray;
} serviceexchangeListAnnouncementResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "announcementMsgsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(serviceexchangeAnnouncementMsg),
        .number = serviceexchangeListAnnouncementResponse_FieldNumber_AnnouncementMsgsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(serviceexchangeListAnnouncementResponse__storage_, announcementMsgsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hasNext",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceexchangeListAnnouncementResponse_FieldNumber_HasNext,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceexchangeListAnnouncementResponse class]
                                     rootClass:[serviceexchangeExchangePrimaryApiAnnouncementRoot class]
                                          file:serviceexchangeExchangePrimaryApiAnnouncementRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceexchangeListAnnouncementResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - serviceexchangeAnnouncementMsg

@implementation serviceexchangeAnnouncementMsg

@dynamic hasMsgId, msgId;
@dynamic title;
@dynamic content;
@dynamic sendTime;

typedef struct serviceexchangeAnnouncementMsg__storage_ {
  uint32_t _has_storage_[1];
  utilidentitysdkIdEncode *msgId;
  NSString *title;
  NSString *content;
  uint64_t sendTime;
} serviceexchangeAnnouncementMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.clazz = GPBObjCClass(utilidentitysdkIdEncode),
        .number = serviceexchangeAnnouncementMsg_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(serviceexchangeAnnouncementMsg__storage_, msgId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceexchangeAnnouncementMsg_FieldNumber_Title,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(serviceexchangeAnnouncementMsg__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceexchangeAnnouncementMsg_FieldNumber_Content,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(serviceexchangeAnnouncementMsg__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = serviceexchangeAnnouncementMsg_FieldNumber_SendTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(serviceexchangeAnnouncementMsg__storage_, sendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[serviceexchangeAnnouncementMsg class]
                                     rootClass:[serviceexchangeExchangePrimaryApiAnnouncementRoot class]
                                          file:serviceexchangeExchangePrimaryApiAnnouncementRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(serviceexchangeAnnouncementMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
